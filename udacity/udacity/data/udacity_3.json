[{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>At the end of this course, you'll understand how to develop an HTML5 game. You will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Knowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["HTML5 Game Development"], "url": ["http://www.udacity.com/overview/Course/cs255/CourseRev/1"], "school": ["Google"], "syllabus": ["<strong>Lesson 0</strong>", "<p>Optional HTML/Javascript crash course</p>", "<strong>Lesson 1</strong>", "<p>Introduction to Canvas rendering</p>", "<strong>Lesson 2</strong>", "<p>Atlases</p>", "<strong>Lesson 3</strong>", "<p>Map rendering</p>", "<strong>Lesson 4</strong>", "<p>Basic Input, handling events</p>", "<strong>Lesson 5</strong>", "<p>The entity hierarchy</p>", "<strong>Lesson 6</strong>", "<p>Box2D, and using external libraries</p>", "<strong>Lesson 7</strong>", "<p>Adding sound</p>", "<strong>Lesson 8</strong>", "<p>Asynchronous Loading</p>"], "length": ["7 weeks long"], "prereqs": ["<p>Knowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs255", "instructor": ["Colt McAnlis and Peter Lubbers"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Throughout this course, we will use algebra to quantify and describe the world around us. Have you ever wondered how many songs can fit onto your flash drive? By the end of the course, you\u2019ll have stronger skills for modeling problems, analyzing patterns, and using algebra to arrive at conclusions.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Understand and develop the language, models, and tools for math reasoning.</p>\r\n<p>Reason with numbers and units to solve problems.</p>\r\n<p>Identify, analyze, extend, and create patterns and functions.</p>\r\n<p>Make connections about relations and functions through multiple representations: graphs, charts, tables, equations.</p>\r\n<p>Apply mathematical reasoning and logic to solve equations and write equivalent forms.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Almost nothing! Students should know their multiplication tables (1-12) and be proficient with adding and subtracting integers (for example, -7 - 16). A pencil and paper will be a student\u2019s best aid rather than a calculator.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Visualizing Algebra"], "url": ["http://www.udacity.com/overview/Course/ma006/CourseRev/1"], "school": ["San Jose State University"], "syllabus": ["<p>Unit 1 - Review of Foundations</p>", "<p>Unit 2 - Equations and Inequalities</p>", "<p>Unit 3 - Graphs of Linear Equations</p>", "<p>Unit 4 - Systems of Equations</p>", "<p>Unit 5 - Exponents and Polynomials</p>", "<p>Unit 6 - Factoring</p>", "<p>Unit 7 - Rational Expressions</p>", "<p>Unit 8 - Rational Exponents and Radicals</p>", "<p>Unit 9 - Solving Quadratic Equations</p>", "<p>Unit 10 - Quadratic Equations and Applications</p>", "<p>Unit 11 - Conic Sections</p>", "<p>Unit 12 - Inverses, Exponentials, and Logarithms</p>"], "length": [], "prereqs": ["<p>Almost nothing! Students should know their multiplication tables (1-12) and be proficient with adding and subtracting integers (for example, -7 - 16). A pencil and paper will be a student\u2019s best aid rather than a calculator.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "ma006", "instructor": ["Susan McClory, Sandra DeSousa and Chris Saden"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.</p>\r\n<p>You will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Knowing how to program in some language is all you\u2019ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.</p>\r\n<p>To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL\u00a0technology. An up to date version of Chrome or Firefox will work (see our\u00a0<a href=\"https://www.udacity.com/tech-requirements\">FAQ</a>\u00a0for more information). You can test if your browser supports this technology by visiting the\u00a0<a href=\"http://get.webgl.org/\">WebGL project homepage</a>.</p>\r\n<p>Almost all programming will be done in JavaScript using\u00a0<a href=\"http://en.wikipedia.org/wiki/Threejs\">three.js library/API</a>.</p>\r\n<p><br>About Autodesk</p>\r\n<p>This course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.\u00a0<a href=\"http://www.autodesk.com/\" target=\"_blank\">http://www.autodesk.com</a></p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Interactive 3D Graphics"], "url": ["http://www.udacity.com/overview/Course/cs291/CourseRev/1"], "school": ["Autodesk"], "syllabus": ["<strong>Lesson 1: Introduction</strong>", "<p>Motivation and a trip down the graphics pipeline, laying out the fundamental processes</p>", "<strong>Lesson 2: Points, Vectors, and Meshes</strong>", "<p>The basics of 3D geometry definition</p>", "<strong>Lesson 3: Colors and Materials</strong>", "<p>Color representation, material computations, transparency</p>", "<strong>Lesson 4: Transforms</strong>", "<p>Translation, scale, rotate and how to properly combine all these</p>", "<strong>Lesson 5: Matrices</strong>", "<p>Transform representation and how to fully control these</p>", "<strong>Lesson 6: Lights</strong>", "<p>Directional and point light sources</p>", "<strong>Lesson 7: Cameras</strong>", "<p>How the camera is defined</p>", "<strong>Lesson 8: Textures and Reflections</strong>", "<p>Color and opacity textures, along with reflection and normal mapping</p>", "<strong>Lesson 9: Shader Programming</strong>", "<p>An introduction to programming vertex and pixel shaders</p>", "<strong>Lesson 10: Interaction and Animation</strong>", "<p>How to select and make objects move</p>"], "length": ["10 weeks long"], "prereqs": ["<p>Knowing how to program in some language is all you\u2019ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.</p>", "<p>To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL\u00a0technology. An up to date version of Chrome or Firefox will work (see our\u00a0<a href=\"https://www.udacity.com/tech-requirements\">FAQ</a>\u00a0for more information). You can test if your browser supports this technology by visiting the\u00a0<a href=\"http://get.webgl.org/\">WebGL project homepage</a>.</p>", "<p>Almost all programming will be done in JavaScript using\u00a0<a href=\"http://en.wikipedia.org/wiki/Threejs\">three.js library/API</a>.</p>", "<p><br>About Autodesk</p>", "<p>This course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.\u00a0<a href=\"http://www.autodesk.com/\" target=\"_blank\">http://www.autodesk.com</a></p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs291", "instructor": ["Eric Haines"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.</p>\r\n<p>Why It\u2019s Important to Think Parallel</p>\r\n<p><a href=\"http://www.youtube.com/watch?v=3DbAB2ChDBw\">Third Pillar of Science</a>\u00a0<br>Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>We expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Intro to Parallel Programming"], "url": ["http://www.udacity.com/overview/Course/cs344/CourseRev/1"], "school": ["Nvidia", "University of California, Davis"], "syllabus": ["<strong>Lesson 1: GPU Programming Model</strong>", "<p>Project 1: Greyscale Conversion (for that classy touch!)</p>", "<strong>Lesson 2: GPU Hardware and Parallel Communication</strong>", "<p>Project 2: Smart Blurring (miracle product for removing wrinkles!)</p>", "<strong>Lesson 3: Fundamental Parallel Algorithms</strong>", "<p>Project 3: HDR Tonemapping (when 1000:1 contrast is not enough!)</p>", "<strong>Lesson 4: Using Sort and Scan</strong>", "<p>Project 4: Red Eye Removal (soothing relief for bright red eyes)</p>", "<strong>Lesson 5: Optimizing GPU Programs</strong>", "<p>Project 5: Accelerating Histograms (when fast isn't fast enough)</p>", "<strong>Lesson 6: Parallel Computing Patterns</strong>", "<p>Project 6: Seamless Image Compositing (polar bear in the swimming pool)</p>", "<strong>Lesson 7: The Frontiers and Future of GPU Computing</strong>"], "length": ["7 weeks long"], "prereqs": ["<p>We expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs344", "instructor": ["John Owens and David Luebke"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>We live in a time of unprecedented access to information...data. Whether researching the best school, job, or relationship, the Internet has thrown open the doors to vast pools of data. Statistics are simply objective and systematic methods for describing and interpreting information so that you may make the most informed decisions about life.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<ul>\r\n<li>The applications of statistics to everyday life</li>\r\n<li>Methods for acquiring data through observation and experimentation</li>\r\n<li>To organize and describe quantitative and categorical forms of data</li>\r\n<li>Anticipating patterns using basic probability and sampling</li>\r\n<li>Statistical inference through estimation and hypothesis testing</li>\r\n<li>Correlation and simple regression</li>\r\n<li>Ways of describing the strength of relationships between variables</li>\r\n</ul>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>It sounds strange to say, but math is not the focus of this class. To do well, however, it is necessary to have a basic understanding of proportions (fractions, decimals, and percentages), negative numbers, basic algebra (solving equations), and exponents and square roots.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Statistics"], "url": ["http://www.udacity.com/overview/Course/st095/CourseRev/1"], "school": ["San Jose State University"], "syllabus": ["<strong>Module 1: Introduction to Statistics and Methods</strong>", "<ul>\r\n<li>Lesson 1: Intro to statistical research methods</li>\r\n<li>Lesson 2: Frequency Distributions &amp; Visualizing data</li>\r\n</ul>", "<strong>Module 2: Describing Data</strong>", "<ul>\r\n<li>Lesson 3: Central Tendency</li>\r\n<li>Lesson 4: Variability</li>\r\n<li>Midterm 1 on Lessons 1-4</li>\r\n</ul>", "<strong>Module 3: Normal Distribution Analysis</strong>", "<ul>\r\n<li>Lesson 5: Standardized Scores (z-scores)</li>\r\n<li>Lesson 6: Probability and the Normal Distribution</li>\r\n<li>Lesson 7: Sampling Distributions</li>\r\n</ul>", "<strong>Module 4: Foundations of Inferential Statistics</strong>", "<ul>\r\n<li>Lesson 8: Estimation</li>\r\n<li>Lesson 9: Hypothesis Testing</li>\r\n</ul>", "<p>Midterm 2 on Lessons 5-9</p>", "<strong>Module 5: Comparing Means</strong>", "<ul>\r\n<li>Lesson 10-11: t-tests</li>\r\n<li>Lesson 12-13: One-way ANOVA</li>\r\n</ul>", "<strong>Module 6: Correlation, Regression, and Non-Parametrics</strong>", "<ul>\r\n<li>Lesson 14: Correlation</li>\r\n<li>Lesson 15: Regression (available soon)</li>\r\n<li>Lesson 16: Chi-Squared Tests (available soon)</li>\r\n</ul>", "<p>Final Exam on Lessons 10-16 (available soon)</p>"], "length": [], "prereqs": ["<p>It sounds strange to say, but math is not the focus of this class. To do well, however, it is necessary to have a basic understanding of proportions (fractions, decimals, and percentages), negative numbers, basic algebra (solving equations), and exponents and square roots.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "st095", "instructor": ["Sean Laraway, Ronald Rogers and Katie Kormanik"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Math is everywhere. In this class, you\u2019ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you\u2019ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>In this course, you will learn...</p>\r\n<ul>\r\n<li>To translate word problems into mathematical expressions or equations</li>\r\n<li>To manipulate algebraic expressions and solve equations</li>\r\n<li>To graph different types of functions and to understand the relationship between a function\u2019s graph and its equation</li>\r\n<li>To model growth and decay</li>\r\n</ul>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Basic arithmetic - addition, subtraction, multiplication and division of positive and negative numbers.\u00a0</p>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>"], "name": ["College Algebra"], "url": ["http://www.udacity.com/overview/Course/ma008/CourseRev/1"], "school": ["San Jose State University"], "syllabus": ["<p>The following topics will be covered. There will be two midterms and one final exam. There are no deadlines unless you are in the SJSU Plus-Udacity for-credit program.</p>", "<p>Lesson 1: Number\u00a0<br>Lesson 2: Expressions\u00a0<br>Lesson 3: Polynomials\u00a0<br>Lesson 4: Equations\u00a0<br>Lesson 5-1: Coordinates\u00a0<br>Lesson 5-2: Distance\u00a0<br>Lesson 5-3: Midpoints And Slope\u00a0<br>Lesson 6-1: Slope And Equations\u00a0<br>Lesson 6-2: Points\u00a0<br>Lesson 7: Forms of the Equation of a Line\u00a0<br>Lesson 8: Inequalities And Absolute Value\u00a0<br>Lesson 9: More Inequalities And Equations\u00a0<br>Lesson 10: Parabolas\u00a0<br>Lesson 11: Factoring\u00a0<br>Lesson 12: Quadratic and Rational Inequalities\u00a0<br>Lesson 13: More Parabolas\u00a0<br>Lesson 14: Completing the Square\u00a0<br>Lesson 15: Quadratic Formula\u00a0<br>Lesson 16: Complex Numbers\u00a0<br>Lesson 17: Functions\u00a0<br>Lesson 18: Domain and Range\u00a0<br>Lesson 19: Behavior of Functions\u00a0<br>Lesson 20: Factor Theorem\u00a0<br>Lesson 21: Rational Zero Test\u00a0<br>Lesson 22: Intermediate Value Theorem\u00a0<br>Lesson 24: Asymptotes\u00a0<br>Lesson 25: Slant Asymptotes\u00a0<br>Lesson 26: Transformations\u00a0<br>Lesson 29: Exponential Functions\u00a0<br>Lesson 30: Scientific Notation\u00a0<br>Lesson 31: Logarithmic Functions\u00a0<br>Lesson 32: Log Properties\u00a0<br>Lesson 33: Solving Exponential and Logarithmic Equations\u00a0<br>Lesson 34: Population, Scrolls and Sound</p>"], "length": [], "prereqs": ["<p>Basic arithmetic - addition, subtraction, multiplication and division of positive and negative numbers.\u00a0</p>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "ma008", "instructor": ["Julie Sliva Spitzer and Miriam Swords Kalk"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured. In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will teach you how to think like a verification engineer. It will show the software development aspects you need to know to ensure chips are working as expected. You will learn how to implement verification environments.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Programming experience including object-oriented programming. Data &amp; Control structure.\u00a0<br><br><br>This course is developed by Cadence Design Systems, a global leader in electronic design automation.<a href=\"http://www.cadence.com/solutions/ev/Pages/default.aspx\" target=\"_blank\">Cadence\u00ae software</a>, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Functional Hardware Verification"], "url": ["http://www.udacity.com/overview/Course/cs348/CourseRev/1"], "school": ["Cadence"], "syllabus": ["<p>Lesson 1:\u00a0Introduction to Hardware Verification</p>", "<p>Lesson 2:\u00a0Basic stimulus modeling and generation</p>", "<p>Lesson 3:\u00a0Interfacing to the Hardware Model</p>", "<p>Lesson 4:\u00a0Monitoring and Functional Coverage</p>", "<p>Lesson 5:\u00a0Checking</p>", "<p>Lesson 6:\u00a0Aspect Oriented Programming</p>", "<p>Lesson 7:\u00a0Reuse Methodology</p>", "<p>Lesson 8:\u00a0Debugging</p>", "<p>Lesson 9:\u00a0Conclusion and Exam</p>"], "length": ["7 weeks long"], "prereqs": ["<p>Programming experience including object-oriented programming. Data &amp; Control structure.\u00a0<br><br><br>This course is developed by Cadence Design Systems, a global leader in electronic design automation.<a href=\"http://www.cadence.com/solutions/ev/Pages/default.aspx\" target=\"_blank\">Cadence\u00ae software</a>, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs348", "instructor": ["Axel Scherer and Hannes Fr\u00f6hlich"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>The objective of this class is to teach you modern AI. You will learn about the basic techniques and tricks of the trade. We also aspire to excite you about the field of AI.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This class introduces students to the basics of Artificial Intelligence, which includes machine learning, probabilistic reasoning, robotics, and natural language processing.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that at our ST101: Introduction to Statistics class</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Introduction to Artificial Intelligence"], "url": ["http://www.udacity.com/overview/Course/cs271/CourseRev/1"], "school": ["Stanford University"], "syllabus": ["<p>Overview of AI</p>", "<p>Statistics, Uncertainty, and Bayes networks</p>", "<p>Machine Learning</p>", "<p>Logic and Planning</p>", "<p>Markov Decision Processes and Reinforcement Learning</p>", "<p>Hidden Markov Models and Filters</p>", "<p>Adversarial and Advanced Planning</p>", "<p>Image Processing and Computer Vision</p>", "<p>Robotics and robot motion planning</p>", "<p>Natural Language Processing and Information Retrieval</p>"], "length": ["10 weeks long"], "prereqs": ["<p>Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that at our ST101: Introduction to Statistics class</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs271", "instructor": ["Sebastian Thrun and Peter Norvig"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>In this course you will examine real world problems -- rescue the Apollo 13 astronauts, stop the spread of epidemics, and fight forest fires -- involving differential equations and figure out how to solve them using numerical methods.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>By the end of this course, you'll develop an intuition for the use of differential equations in the applied sciences. You'll also learn how to build mathematical models for systems of differential equations. Along the way, you'll learn how to translate mathematical expressions into Python code, and solve some really cool problems!</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>You'll need a basic knowledge of programming for this course, around the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012\">CS 101</a>\u00a0or equivalent. You'll also need to understand trigonometry at the high school level, as well as basic vector algebra. This class will primarily involve solving equations numerically rather than analytically, but some exposure to<a href=\"http://www.khanacademy.org/math/calculus/\">calculus</a>\u00a0and physics at the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/pstrong00/CourseRev/1\">PH 100</a>\u00a0wouldn't hurt.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Differential Equations in Action"], "url": ["http://www.udacity.com/overview/Course/cs222/CourseRev/1"], "school": [], "syllabus": ["<strong>Lesson 1: Rescuing Apollo 13, Part 1</strong>", "<p>Introduction to the Forward Euler Method</p>", "<strong>Lesson 2: Rescuing Apollo 13, Part 2</strong>", "<p>Comparing solvers, Heun\u2019s Method and Symplectic Euler Method</p>", "<strong>Lesson 3: Analyzing the Spread of Diseases</strong>", "<p>Implicit methods and stiffness</p>", "<strong>Lesson 4: There\u2019s Plenty of Fish in the Sea?</strong>", "<p>Stability, sensitivity, and optimization</p>", "<strong>Lesson 5: Antilock Brake Systems</strong>", "<p>Friction, equilibria, and control theory</p>", "<strong>Lesson 6: The Path of a Forest Fire</strong>", "<p>Partial differential equations and heat conduction</p>", "<strong>Lesson 7: Advanced Applications of Numerical Methods</strong>", "<p>Chaos, software, and predictive capability</p>"], "length": ["7 weeks long"], "prereqs": ["<p>You'll need a basic knowledge of programming for this course, around the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012\">CS 101</a>\u00a0or equivalent. You'll also need to understand trigonometry at the high school level, as well as basic vector algebra. This class will primarily involve solving equations numerically rather than analytically, but some exposure to<a href=\"http://www.khanacademy.org/math/calculus/\">calculus</a>\u00a0and physics at the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/pstrong00/CourseRev/1\">PH 100</a>\u00a0wouldn't hurt.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs222", "instructor": ["J\u00f6rn Loviscach"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will teach you how to think like a software tester, how to find bugs in code earlier, and write better code.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Programming experience is required.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Software Testing"], "url": ["http://www.udacity.com/overview/Course/cs258/CourseRev/1"], "school": ["University of Utah"], "syllabus": ["<strong>Lesson 1: Domains, Ranges, Oracles, and Kinds of Testing</strong>", "<p>How to think about the different elements of software testing</p>", "<strong>Lesson 2: Code Coverage</strong>", "<p>How to find parts of a program that need more testing</p>", "<strong>Lesson 3: Random Testing</strong>", "<p>How to automatically generate test cases that break code in unexpected ways</p>", "<strong>Lesson 4: Advanced Random Testing</strong>", "<p>How to engineer a sophisticated random test case generator</p>", "<strong>Lesson 5: Consequences</strong>", "<p>How to deal with lots of bugs, how to take a big input that triggers a bug and make it smaller, how to report a bug, and more!</p>", "<strong>Lesson 6: Conclusion</strong>"], "length": ["7 weeks long"], "prereqs": ["<p>Programming experience is required.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs258", "instructor": ["John Regehr"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>At the end of this course, you will have a solid understanding of theoretical computer science. This will not only allow you to recognize some of the most challenging algorithmic problems out there, but also give you powerful tools to deal with them in practice.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>You should have a basic understanding of algorithms (such as\u00a0<a href=\"https://www.udacity.com/course/cs215\">CS215</a>) and programming (such as\u00a0<a href=\"https://www.udacity.com/course/cs101\">CS101</a>). No prior knowledge about theoretical computer science required!</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Intro to Theoretical Computer Science"], "url": ["http://www.udacity.com/overview/Course/cs313/CourseRev/1"], "school": [], "syllabus": ["<strong>Lesson 1: Challenging Problems</strong>", "<p>An introduction to tough problems and their analysis</p>", "<strong>Lesson 2: Understanding Hardness</strong>", "<p>What we mean when a problem is \u201chard\u201d and the concept of NP-completeness</p>", "<strong>Lesson 3: Showing Hardness</strong>", "<p>Tools to let you recognize and prove that a problem is hard</p>", "<strong>Lesson 4: Intelligent Force</strong>", "<p>Smart techniques to solve problems that should \u2013 theoretically \u2013 be impossible to solve</p>", "<strong>Lesson 5: Sloppy Solutions</strong>", "<p>Gaining speed by accepting approximate solutions</p>", "<strong>Lesson 6: Poking Around</strong>", "<p>Why randomness can be of help \u2013 sometimes. An introduction to complexity classes.</p>", "<strong>Lesson 7: Ultimate Limits</strong>", "<p>Problems that no computer can ever solve. In theory.</p>"], "length": ["7 weeks long"], "prereqs": ["<p>You should have a basic understanding of algorithms (such as\u00a0<a href=\"https://www.udacity.com/course/cs215\">CS215</a>) and programming (such as\u00a0<a href=\"https://www.udacity.com/course/cs101\">CS101</a>). No prior knowledge about theoretical computer science required!</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs313", "instructor": ["Sebastian Wernicke"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Learn the key tools and steps to build a successful startup (or at least reduce the risk of failure). An introduction to the basics of Steve Blank's famous Customer Development process, where entrepreneurs \"get out of the building\" to gather massive amounts of customer and marketplace feedback, and then use that feedback to continuously iterate and evolve their startup business models, improving the chances of success at every step.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>You'll learn the key steps of the Customer Development process: how to identify and engage the first customers for your product, and how to gather, evaluate and use their feedback to make your product, marketing and business model far stronger.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Prior knowledge or experience are not required. Passion, tenacity, and a willingness to work hard are essential. Ideally, you'll join the class with at least a rough idea of the business model of the startup you'll work on step-by-step through the course of the class.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["How to Build a Startup"], "url": ["http://www.udacity.com/overview/Course/ep245/CourseRev/1"], "school": [], "syllabus": ["<strong>Lesson 1: What We Now Know</strong>", "<p>Why startups are not smaller versions of large companies</p>", "<strong>Lessons 1.5A and 1.5B: Business Models and Customer Development</strong>", "<p>How to articulate and test hypotheses</p>", "<strong>Lesson 2: Value Proposition</strong>", "<p>How do you find your minimum viable product?</p>", "<strong>Lesson 3: Customer Segments</strong>", "<p>How do you find your customer archetype?</p>", "<strong>Lesson 4: Channels</strong>", "<p>How does your product gets to customers?</p>", "<strong>Lesson 5: Customer Relationships</strong>", "<p>How do you get, keep and grow customers?</p>", "<strong>Lesson 6: Revenue Models</strong>", "<p>How do you make your money?</p>", "<strong>Lesson 7: Partners</strong>", "<p>Who are your partners and suppliers?</p>", "<strong>Lesson 8: Resources, Activities and Costs</strong>", "<p>What is most important for the business?</p>"], "length": ["7 weeks long"], "prereqs": ["<p>Prior knowledge or experience are not required. Passion, tenacity, and a willingness to work hard are essential. Ideally, you'll join the class with at least a rough idea of the business model of the startup you'll work on step-by-step through the course of the class.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "ep245", "instructor": ["Steve Blank"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>At the end of this course you will have a solid understanding about systematic debugging, will know how to automate debugging and will have built several functional debugging tools in Python.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Basic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Software Debugging"], "url": ["http://www.udacity.com/overview/Course/cs259/CourseRev/1"], "school": ["Saarland University"], "syllabus": ["<strong>Lesson 1: How Debuggers work</strong>", "<p>Theory: Scientific method and its application to debugging.\u00a0<br>Fun fact: First bug in the history of computer science.\u00a0<br>Practice: Building a simple tracer.</p>", "<strong>Lesson 2: Asserting Expectations</strong>", "<p>Theory: Assertions in testing and in debugging.\u00a0<br>Fun fact: The most expensive bug in history.\u00a0<br>Practice: Improving the tracer.</p>", "<strong>Lesson 3: Simplifying Failures</strong>", "<p>Theory: Strategy of simplifying failures. Binary search. Delta debugging principle.\u00a0<br>Fun fact: Mozilla bugathon.\u00a0<br>Practice: Building a delta debugger.</p>", "<strong>Lesson 4: Tracking Origins</strong>", "<p>Theory: Cause-effect chain. Deduction. Dependencies. Slices.\u00a0<br>Fun fact: Sherlock Holmes and Doctor Watson.\u00a0<br>Practice: Improving the delta debugger.</p>", "<strong>Lesson 5: Reproducing Failures</strong>", "<p>Theory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug). Systematic reproduction process.\u00a0<br>Fun fact: Mad laptop bug.\u00a0<br>Practice: Building a statistic debugging tool.</p>", "<strong>Lesson 6: Learning from Mistakes</strong>", "<p>Theory: Bug database management. Classifying bugs. Bug maps. Learning from mistakes.\u00a0<br>Fun fact: Programmer with the most buggy code.\u00a0<br>Practice: Improving your tools and practicing on a real world bug database.</p>"], "length": ["7 weeks long"], "prereqs": ["<p>Basic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs259", "instructor": ["Andreas Zeller"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>By the end of this class you will understand key concepts needed to devise new algorithms for graphs and other important data structures and to evaluate the efficiency of these algorithms.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Algorithms"], "url": ["http://www.udacity.com/overview/Course/cs215/CourseRev/1"], "school": [], "syllabus": ["<strong>Lesson 1: A Social Network Magic Trick</strong>", "<p>Becoming familiar with algorithm analysis</p>", "<strong>Lesson 2: Growth Rates in Social Networks</strong>", "<p>Using mathematical tools to analyze how things are connected</p>", "<strong>Lesson 3: Basic Graph Algorithms</strong>", "<p>Finding the quickest route to Kevin Bacon</p>", "<strong>Lesson 4: It\u2019s Who You Know</strong>", "<p>Keeping track of your best friends using heaps</p>", "<strong>Lesson 5: Strong and Weak Bonds</strong>", "<p>Working with social networks with edge weights.</p>", "<strong>Lesson 6: Hardness of Network Problems</strong>", "<p>Exploring what it means for a social network problem to be harder than other.</p>", "<strong>Lesson 7: Conclusion</strong>", "<p>Using your knowledge</p>"], "length": ["7 weeks long"], "prereqs": ["<p>This class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs215", "instructor": ["Michael Littman"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will cover visualization, probability, regression and other topics that will help you learn the basic methods of understanding data with statistics.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course does not require any previous knowledge of statistics. Basic familiarity with algebra such as knowing how to compute the mean, median and mode of a set of numbers will be helpful.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Introduction to Statistics"], "url": ["http://www.udacity.com/overview/Course/st101/CourseRev/1"], "school": ["Stanford University"], "syllabus": ["<strong>Lesson 1: Visualizing relationships in data</strong>", "<p>Seeing relationships in data and predicting based on them; Simpson's paradox</p>", "<strong>Lesson 2: Probability</strong>", "<p>Probability; Bayes Rule; Correlation vs. Causation</p>", "<strong>Lesson 3: Estimation</strong>", "<p>Maximum Likelihood Estimation; Mean, Median, Mode; Standard Deviation, Variance</p>", "<strong>Lesson 4: Outliers and Normal Distribution</strong>", "<p>Outliers, Quartiles; Binomial Distribution; Central Limit Theorem; Manipulating Normal Distribution</p>", "<strong>Lesson 5: Inference</strong>", "<p>Confidence intervals; Hypothesis Testing</p>", "<strong>Lesson 6: Regression</strong>", "<p>Linear regression; correlation</p>", "<strong>Lesson 7: Final Exam</strong>"], "length": ["7 weeks long"], "prereqs": ["<p>This course does not require any previous knowledge of statistics. Basic familiarity with algebra such as knowing how to compute the mean, median and mode of a set of numbers will be helpful.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "st101", "instructor": ["Sebastian Thrun"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.</p>\r\n<p>This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will teach you probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics.</p>\r\n<p>At the end of the course, you will leverage what you learned by solving the problem of a runaway robot that you must chase and hunt down!</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Success in this course requires some programming experience and some mathematical fluency.</p>\r\n<p>Programming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don\u2019t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity\u2019s\u00a0<a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Introduction to Computer Science</a>\u00a0course before attempting this one.</p>\r\n<p>The math used will be centered on probability and linear algebra. You don\u2019t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes\u2019 rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Artificial Intelligence for Robotics"], "url": ["http://www.udacity.com/overview/Course/cs373"], "school": ["Stanford University"], "syllabus": ["<strong>Lesson 1: Localization</strong>", "<ul>\r\n<li>Localization</li>\r\n<li>Total Probability</li>\r\n<li>Uniform Distribution</li>\r\n<li>Probability After Sense</li>\r\n<li>Normalize Distribution</li>\r\n<li>Phit and Pmiss</li>\r\n<li>Sum of Probabilities</li>\r\n<li>Sense Function</li>\r\n<li>Exact Motion</li>\r\n<li>Move Function</li>\r\n<li>Bayes Rule</li>\r\n<li>Theorem of Total Probability</li>\r\n</ul>", "<strong>Lesson 2: Kalman Filters</strong>", "<ul>\r\n<li>Gaussian Intro</li>\r\n<li>Variance Comparison</li>\r\n<li>Maximize Gaussian</li>\r\n<li>Measurement and Motion</li>\r\n<li>Parameter Update</li>\r\n<li>New Mean Variance</li>\r\n<li>Gaussian Motion</li>\r\n<li>Kalman Filter Code</li>\r\n<li>Kalman Prediction</li>\r\n<li>Kalman Filter Design</li>\r\n<li>Kalman Matrices</li>\r\n</ul>", "<strong>Lesson 3: Particle Filters</strong>", "<ul>\r\n<li>Slate Space</li>\r\n<li>Belief Modality</li>\r\n<li>Particle Filters</li>\r\n<li>Using Robot Class</li>\r\n<li>Robot World</li>\r\n<li>Robot Particles</li>\r\n</ul>", "<strong>Lesson 4: Search</strong>", "<ul>\r\n<li>Motion Planning</li>\r\n<li>Compute Cost</li>\r\n<li>Optimal Path</li>\r\n<li>First Search Program</li>\r\n<li>Expansion Grid</li>\r\n<li>Dynamic Programming</li>\r\n<li>Computing Value</li>\r\n<li>Optimal Policy</li>\r\n</ul>", "<strong>Lesson 5: PID Control</strong>", "<ul>\r\n<li>Robot Motion</li>\r\n<li>Smoothing Algorithm</li>\r\n<li>Path Smoothing</li>\r\n<li>Zero Data Weight</li>\r\n<li>Pid Control</li>\r\n<li>Proportional Control</li>\r\n<li>Implement P Controller</li>\r\n<li>Oscillations</li>\r\n<li>Pd Controller</li>\r\n<li>Systematic Bias</li>\r\n<li>Pid Implementation</li>\r\n<li>Parameter Optimization</li>\r\n</ul>", "<strong>Lesson 6: SLAM (Simultaneous Localization and Mapping)</strong>", "<ul>\r\n<li>Localization</li>\r\n<li>Planning</li>\r\n<li>Segmented Ste</li>\r\n<li>Fun with Parameters</li>\r\n<li>SLAM</li>\r\n<li>Graph SLAM</li>\r\n<li>Implementing Constraints</li>\r\n<li>Adding Landmarks</li>\r\n<li>Matrix Modification</li>\r\n<li>Untouched Fields</li>\r\n<li>Landmark Position</li>\r\n<li>Confident Measurements</li>\r\n<li>Implementing SLAM</li>\r\n</ul>", "<strong>Runaway Robot Final Project</strong>"], "length": ["7 weeks long"], "prereqs": ["<p>Success in this course requires some programming experience and some mathematical fluency.</p>", "<p>Programming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don\u2019t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity\u2019s\u00a0<a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Introduction to Computer Science</a>\u00a0course before attempting this one.</p>", "<p>The math used will be centered on probability and linear algebra. You don\u2019t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes\u2019 rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs373", "instructor": ["Sebastian Thrun"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This unique class gives you the chance to see the sites where physics history was made and learn some of the subject's most captivating concepts.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course is suitable for anyone; a basic understanding of algebra is suggested.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Introduction to Physics"], "url": ["http://www.udacity.com/overview/Course/ph100/CourseRev/1"], "school": [], "syllabus": ["<strong>Lesson 1: How can we measure the circumference of the Earth?</strong>", "<p>Basics of geometry and trigonometry</p>", "<strong>Lesson 2: How do objects move?</strong>", "<p>Data analysis and kinematics</p>", "<strong>Lesson 3: What causes motion?</strong>", "<p>Forces, acceleration, and Newton\u2019s Laws</p>", "<strong>Lesson 4: How can we use motion?</strong>", "<p>Work, energy, and simple machines</p>", "<strong>Lesson 5: How can we determine our longitude at sea?</strong>", "<p>Simple harmonic motion</p>", "<strong>Lesson 6: What is electricity?</strong>", "<p>Charge and electric fields</p>", "<strong>Lesson 7: What is left to discover?</strong>", "<p>Modern physics and open questions</p>"], "length": ["7 weeks long"], "prereqs": ["<p>This course is suitable for anyone; a basic understanding of algebra is suggested.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "ph100", "instructor": ["Andy Brown"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Explore how secrets are written and shared, as well as what can go wrong when cryptography is misused or implemented badly.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["CS387 - Applied Cryptography"], "url": ["http://www.udacity.com/overview/Course/cs387"], "school": ["University of Virginia"], "syllabus": ["<p><strong>Lesson 1: Perfect Ciphers</strong></p>", "<p>What makes certain ciphers perfect, how the Lorenz Cipher was broken</p>", "<p><strong>Lesson 2: Symmetric Encryption</strong></p>", "<p>Sending messages when two people share a secret</p>", "<p><strong>Lesson 3: Key Exchange</strong></p>", "<p>Technics to establish a shared secret</p>", "<p><strong>Lesson 4: Asymmetric Encryption</strong></p>", "<p>Exchanging information using public key cryptosystems</p>", "<p><strong>Lesson 5: Public Key Protocols</strong></p>", "<p>Encrypted key exchange, certificates, secure commerce</p>", "<p><strong>Lesson 6: Using Cryptographic Primitives</strong></p>", "<p>How cryptography can be useful for anonymizing communication, voting, and digital cash</p>", "<p><strong>Lesson 7: Secure Computation</strong></p>", "<p>Computing without exposing data</p>"], "length": ["7 weeks long"], "prereqs": ["<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs387", "instructor": ["David Evans"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>Starting from the basics of how the web works, this class will walk you through everything you need to know to build your own blog application and scale it to support large numbers of users.</p>\r\n</div>\r\n<strong>Why Take This Course?</strong>\r\n<div>\r\n<p>In this project-based course your knowledge will be evaluated as you learn to build your own blog application! Learn everything Steve Huffman wished he would have known when he broke into the startup world. Read more about Huffman and the course\u00a0<a href=\"http://www.udacity.blogspot.com/2012/05/steve-huffman-has-something-to-teach.html\">here.</a></p>\r\n</div>\r\n<strong>Prerequisites and Requirements</strong>\r\n<div>\r\n<p>A moderate amount of programming and computer science experience is necessary for this course.</p>\r\n</div>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<strong>What Will I Learn?</strong>\r\n<strong>Projects</strong>\r\n<div>\r\n<p>Make a webpage that anyone can add to and edit.</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>"], "name": ["Web Development"], "url": ["http://www.udacity.com/overview/Course/cs253"], "school": [], "syllabus": ["<strong>How the Web Works</strong>", "<p>Introduction to HTTP and Web Applications</p>", "<strong>How to Have Users</strong>", "<p>Getting and processing user input</p>", "<strong>How to Manage State</strong>", "<p>Databases and persistent data</p>", "<strong>Whom to Trust</strong>", "<p>User authentication and access control</p>", "<strong>How to Connect</strong>", "<p>Web applications as services, using APIs</p>", "<strong>How to Serve Millions</strong>", "<p>Scaling, caching, optimizations</p>", "<strong>Changing the World</strong>", "<p>Building a successful web application, project</p>"], "length": ["7 weeks long"], "prereqs": ["<p>A moderate amount of programming and computer science experience is necessary for this course.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs253", "instructor": ["Steve Huffman"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>Learn new concepts, patterns, and methods that will expand your programming abilities, helping move you from a novice to an expert programmer.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Move along the path towards becoming an expert programmer! In this class you will practice going from a problem description to a solution, using a series of assignments.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Design of Computer Programs"], "url": ["http://www.udacity.com/overview/Course/cs212"], "school": ["Stanford University"], "syllabus": ["<strong>Lesson 1: Winning Poker Hands</strong>", "<p>Steps of the design process; Developing for clarity and generality; Arguments for program correctness; Experimentation and simulation.; Design tradeoffs; Simplicity and Clarity. Decomposition and composability.</p>", "<strong>Lesson 2: Back of the Envelope</strong>", "<p>Back of envelope calculations; When to use brute force and when to be clever; The Zebra puzzle; Generator expressions; Permutations and combinations. Cryptarithmetic; Recursive and wishful thinking.</p>", "<strong>Lesson 3: Regular Expressions, other languages and interpreters</strong>", "<p>Defining the language of regular expressions; Interpreting the language; Defining the set of strings matched by a regular expression;\u00a0<br>Other languages.</p>", "<strong>Lesson 4: Dealing with complexity through search</strong>", "<p>Search: finding your way with a flashlight or boat; pouring water. Analyzing the efficiency of an algorithm; Recurrence relations; Matching data types with algorithms; Longest palindrome substring algorithm.</p>", "<strong>Lesson 5: Dealing with uncertainty through probability</strong>", "<p>Probability: the game of Pig; Maximizing expected utility to optimize strategy.</p>", "<strong>Lesson 6: Word Games</strong>", "<p>Managing complexity; Large sets of words; Appropriate data structures; Word games.</p>", "<strong>Lesson 7: Conclusion</strong>", "<p>Final exam/project</p>"], "length": ["7 weeks long"], "prereqs": ["<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs212", "instructor": ["Peter Norvig"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<p>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Take this class and learn how to build your own simple web browser complete with the ability to parse and understand HTML and JavaScript.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"], "name": ["Programming Languages"], "url": ["http://www.udacity.com/overview/Course/cs262"], "school": ["University of Virginia"], "syllabus": ["<strong>String Patterns</strong>", "<p>Finding and specifying classes of strings using regular expressions</p>", "<strong>Lexical Analysis</strong>", "<p>Breaking strings down into important words</p>", "<strong>Grammars</strong>", "<p>Specifying and deconstructing valid sentences</p>", "<strong>Parsing</strong>", "<p>Turning sentences into trees</p>", "<strong>Interpreting</strong>", "<p>Simulating programs</p>", "<strong>Building a Web Browser</strong>", "<p>Interpreting HTML and JavaScript</p>", "<strong>Wrap-up</strong>", "<p>Exam testing your knowledge</p>"], "length": ["7 weeks long"], "prereqs": ["<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs262", "instructor": ["Wes Weimer"], "effort": "Assumes 6hr/wk"},
{"startDate": ["Self Paced"], "about": ["<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>In this introductory course, you\u2019ll learn and practice key computer science concepts by building your own versions of popular web applications. You\u2019ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you\u2019ll explore fundamental computer science concepts, as you build your own search engine and social network.</p>\r\n</div>\r\n<strong>Why Take This Course?</strong>\r\n<div>\r\n<p>You\u2019ll learn the programming language Python, and you\u2019ll explore foundational concepts in computer science. Most importantly, you\u2019ll start thinking like a software engineer by solving interesting problems (how to build a web crawler or a social network) using computer science.</p>\r\n<p>This course is a first step into the world of computer science, and whether you want to become a software engineer, or collaborate with software engineers, this course is for you. You\u2019ll be prepared for intermediate-level computer science courses when you\u2019ve mastered the concepts covered in this course.</p>\r\n<p>Build a Search Engine:</p>\r\n<p>Throughout this course, you\u2019ll build a search engine by learning about and producing key search engine components including a crawler, an index and a page rank algorithm. As you build these pieces, you\u2019ll be learning about and practicing computer science skills that will ready you for intermediate level computer science courses.</p>\r\n<p>Build a Social Network:</p>\r\n<p>At the end of the course we will give you a set of relationships (i.e. strings of phrases like \u201cDave likes Andy, Kathleen and Kristy\u201d) and you will use your new computer science skills to organize these relationships into a social network. With your new social network, you can explore relationships and gain insight into how you fit into your own social networks.</p>\r\n</div>\r\n<strong>Prerequisites and Requirements</strong>\r\n<div>\r\n<p>There is no prior programming knowledge needed for this course. Beginners are welcome!</p>\r\n</div>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>\r\n</div>\r\n</div>"], "name": ["Introduction to Computer Science"], "url": ["http://www.udacity.com/overview/Course/cs101"], "school": ["University of Virginia"], "syllabus": ["<strong>Lesson 1: How to Get Started</strong>", "<p>Your first program: Extracting a link</p>", "<strong>Lesson 2: How to Repeat</strong>", "<p>Procedures, decisions (if), loops; finding all of the links on a page</p>", "<strong>Additional Lesson: How to Solve Problems</strong>", "<p>Universal techniques for solving programming problems</p>", "<strong>Lesson 3: How to Manage Data</strong>", "<p>Lists; crawling the web</p>", "<strong>Lesson 4: Responding to Queries</strong>", "<p>Complex data structures; building a reverse index to do searches; networks</p>", "<strong>Lesson 5: How Programs Run</strong>", "<p>Reasoning about cost; hash tables (Dictionary)</p>", "<strong>Lesson 6: How to Have Infinite Power</strong>", "<p>Recursive definitions; ranking search results</p>", "<strong>Lesson 7: Where to Go from Here</strong>", "<p>Past, present, and future of computing; exam</p>", "<strong>Final Project: Build a Social Network</strong>"], "length": ["7 weeks long"], "prereqs": ["<p>There is no prior programming knowledge needed for this course. Beginners are welcome!</p>"], "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"], "courseCode": "cs101", "instructor": ["Sebastian Thrun and David Evans"], "effort": "Assumes 6hr/wk"}]