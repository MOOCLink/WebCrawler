[{
    "startDate": ["Finished"],
  "about": ["<p>The objective of this class is to teach you modern AI. You will learn about the basic techniques and tricks of the trade. We also aspire to excite you about the field of AI.</p>"],
    "name": ["Introduction to Artificial Intelligence"],
    "url": ["https://www.udacity.com/course/cs271"],
    "school": ["Stanford University"],
    "effort": ["Assumes 6hr/wk"],
    "syllabus": ["<p>Overview of AI</p>

<p>Statistics, Uncertainty, and Bayes networks</p>

<p>Machine Learning</p>

<p>Logic and Planning</p>

<p>Markov Decision Processes and Reinforcement Learning</p>

<p>Hidden Markov Models and Filters</p>

<p>Adversarial and Advanced Planning</p>

<p>Image Processing and Computer Vision</p>

<p>Robotics and robot motion planning</p>

<p>Natural Language Processing and Information Retrieval</p>"],
    "length": ["10 weeks long"],
    "prereqs": ["<p>Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that at our ST101: Introduction to Statistics class</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sebastian Thrun and Peter Norvig"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>Ten minutes into this class you will make your own completely personalized version of the insanely addictive game\u00a0<a href=\"http://gabrielecirulli.github.io/2048/\" target=\"_blank\">2048</a>. Even if you've never coded before. Pretty cool, no?</p>", "<p>You'll do this by making small (but important) modifications to the source code for the original 2048 game. If this sounds intimidating, don't worry. We'll teach you the basics of HTML and CSS and how they interact with Javascript (don't worry if that sentence doesn't mean anything to you yet. It will soon).</p>", "<p>The purpose of this class is to have fun learning how to quickly and easily take an existing open source program, make some changes, and create something that looks and feels completely new. The game you create will be mobile friendly (you can play it on your phone!) and totally shareable.</p>"],
    "name": ["Make your own 2048"],
    "url": ["https://www.udacity.com/course/ud248"],
    "school": ["Udacity"],
    "syllabus": ["<strong>Lesson 1: Exploring the HTML and CSS</strong>", "<p>You will create our own version of 2048 by making changes to the existing HTML and CSS files. Within 10 minutes, you'll have your own game. Within an hour, you're friends will be playing\u00a0your\u00a02048 game (fun bonus: your game will be totally mobile-friendly). The topics we'll cover are:</p>", "<ul>\r\n<li>What is open source?</li>\r\n<li>What is HTML? What is CSS? Javascript?</li>\r\n<li>How do these three interact to lead to a fully functioning web/mobile app?</li>\r\n<li>What is Github?</li>\r\n<li>How do I get someone else's code, make changes, and create my own version?</li>\r\n<li>How do I host and share my game?</li>\r\n</ul>"],
    "length": ["1 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Nothing!</p>", "<p>Really. This course is for complete beginners. It is designed to help someone who has never seen computer code take their first steps into the world of programming and web-development.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Andy Brown and Sarah Spikes"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer. And more importantly - you will learn how to harness the power of\u00a0App Engine\u00a0- Platform as a Service, run by Google, so you can focus on your application's features, not on managing infrastructure that runs your app. Let Google run and scale the infrastructure and do what you do best - write code!</p>", "<p>However, to use App Engine effectively, you have to learn how it works, and this is exactly what this course will teach! You will also learn the best practices of using\u00a0<a href=\"https://cloud.google.com/products/cloud-endpoints/\" target=\"_blank\">Cloud Endpoints</a>\u00a0that allow you to easily create RESTful services and make them accessible to iOS, Android and Javascript clients. They allow you to automatically generate client libraries to make wiring up the frontend easy. And there are some nifty built-in features, like denial-of-service protection and OAuth 2.0 support.</p>"],
    "name": ["Developing Scalable Apps with Google App Engine"],
    "url": ["https://www.udacity.com/course/ud859"],
    "school": ["Google"],
    "syllabus": ["<strong>Overview</strong>", "<p>This course consists of 6 lessons. First one is an overview of cloud computing and the benefits of Platform as a Service. Lessons 2-5 will cover important theoretical concepts of Google App Engine and also plenty of hands-on exercises implementing what you have learned. Lesson 6 will be a short intro on an easy way to create native mobile apps that talk to your backend.</p>", "<strong>Lesson 1: Scalability Basics</strong>", "<p>Do you know how and why server racks were invented years ago? Have you realized all of the problems that you have to solve if you will try to scale your app by yourself? Learn about a better way.</p>", "<strong>Lesson 2: Getting Started</strong>", "<p>Set up your first App Engine project and learn how to define Cloud Endpoints.</p>", "<p>Start the course project app - Conference Central and add authentication and user profiles.</p>", "<strong>Lesson 3: Storing and Retrieving Data</strong>", "<p>One of the most important things you want to do in your app is storing data. In this lesson you will learn what is Google App Engine Datastore, how is it different from RDBMS and how you can use it in your applications.</p>", "<p>Add the ability to store and retrieve user profiles and conferences to the course project app.</p>", "<strong>Lesson 4: Advanced Datastore Concepts</strong>", "<p>Learn more about how Datastore works, including queries, filters, indexes and transactions.</p>", "<p>Add different ways to query conferences.</p>", "<strong>Lesson 5: Advanced App Engine Topics</strong>", "<p>There are a lot of things you might want your application to do in background, without making the user wait, or even initiate the process. Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app. You will also learn about Memcache, and get an overview of topics like Edge Caching, AppStats and other methods of optimising your apps performance.</p>", "<p>Add a push queue, cron job and a customised Memcache entry to your app.</p>", "<strong>Lesson 6: App Engine and Mobile Apps</strong>", "<p>You have been using Cloud Endpoints in the app, and now it\u2019s time to see how you can use them in a mobile app. Learn how to generate native libraries for Android and iOS that can talk to your backend. You can even recompile the Android app we provide with our course, to work against your own project. How cool is that?</p>", "<p>Generate mobile client libraries for your app.</p>"],
    "length": ["6 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>You should be fairly comfortable programming in Java, preferably with some experience developing web applications and working with databases for at least a year. You will be developing the backend of a sample app, so you donâ€™t have to worry about HTML or JavaScript.</p>

<p>You should have sufficient permissions to install new software on your computer, and comfortable configuring it, including setting up system variables.</p>

<p>We will be using Maven and Eclipse for this course, and we strongly suggest that you use them as well.</p>
</div>
                        <p>See the <a href="/tech-requirements" target="_blank">Technology Requirements</a> for using Udacity</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Jocelyn Becker and Magnus Hyttsten"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>You will learn how to optimize any website for speed by diving into the details of how mobile and desktop browsers render pages.</p>", "<p>In this short course, you\u2019ll learn about the Critical Rendering Path, or the set of steps browsers must take to convert HTML, CSS and JavaScript into living, breathing websites. From there, you\u2019ll start exploring and experimenting with tools to measure performance and simple strategies to deliver the first pixels to the screen as early as possible. You\u2019ll learn how to dive into recommendations from\u00a0<a title=\"PageSpeed Insights\" href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights</a>\u00a0and the Timeline view of Google Chrome\u2019s Developer Tools to find the data you need to achieve immediate performance boosts!</p>"],
    "name": ["Website Performance Optimization: The Critical Rendering Path"],
    "url": ["https://www.udacity.com/course/ud884"],
    "school": ["Google"],
    "syllabus": ["<p><strong>Overview</strong></p>", "<p>Throughout the course, you\u2019ll build a performance toolbox to help you build faster website experiences by taking advantage of PageSpeed Insights recommendations and measuring page performance on mobile and desktop with Chrome Developer Tools.</p>", "<p>This class contains an introductory lesson, two primary lessons and a final project. Before diving into optimizations, you\u2019ll build an understanding of how browsers convert HTML, CSS and JavaScript into websites. Along the way, you\u2019ll practice measuring performance using the same tools Google engineers use.</p>", "<p>Then comes the really fun part: optimization! You\u2019ll learn about easy-to-implement performance gains and develop a simple and powerful model for uncovering optimization opportunities.</p>", "<p>You\u2019ll put your newfound performance skillset to the test with the final project, where you\u2019ll be optimizing your own online portfolio website!</p>", "<p><strong>Lessons</strong> <strong>Lesson 0 (20 minutes)</strong></p>", "<p>You can\u2019t optimize what you can\u2019t measure, so in this lesson you\u2019ll learn how to open Chrome Developer Tools to measure the performance of mobile and desktop websites.</p>", "<p><strong>Lesson 1 (60 minutes)</strong></p>", "<p>Optimizing any website\u2019s performance requires a strong understanding of how browsers build websites from HTML, CSS and JavaScript. You\u2019ll start by breaking down the\u00a0Critical Rendering Path\u00a0- the steps the browser has to take to render a page. You\u2019ll get an understanding of how:</p>", "<ul>\r\n<li>HTML\u00a0is converted to the\u00a0Document Object Model (DOM).</li>\r\n<li>CSS\u00a0is converted to the\u00a0CSS Object Model (CSSOM).</li>\r\n<li>the browser runs\u00a0layout\u00a0to determine the position and size of elements beforepainting\u00a0pixels on the screen.</li>\r\n</ul>", "<p>Throughout the lesson, you\u2019ll learn how to take advantage of the Timeline view inChrome Developer Tools\u00a0to measure each and every step\u2019s performance on mobile and desktop.</p>", "<p><strong>Lesson 2 (90 minutes)</strong></p>", "<p>You\u2019ll explore easy HTML, CSS and JavaScript optimizations with significant performance implications, some of which are as simple as adding a single attribute to an HTML tag! Along the way, you\u2019ll be developing the skills to help you diagnose opportunities for optimizations, including:</p>", "<ul>\r\n<li>building\u00a0quick and dirty\u00a0diagrams of the Critical Rendering Path.</li>\r\n<li>identifying\u00a0three key metrics\u00a0to triangulate potential performance bottlenecks.</li>\r\n</ul>"],
    "length": ["1 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course is for any and all web developers, whether you started learning about HTML, CSS and JavaScript recently or have been building websites since the nineties!</p>", "<p>Most importantly, you should be able to explain the overall purpose of HTML, CSS and JavaScript with respect to website structure. In addition, you should be comfortable reading and writing HTML documents, however you will not be writing JavaScript or CSS styles for this course.</p>", "<p>This course is taught with\u00a0<a href=\"https://www.google.com/intl/en_us/chrome/browser/\" target=\"_blank\">Google Chrome</a>\u00a0and\u00a0<a href=\"http://www.google.com/intl/en/chrome/browser/canary.html\" target=\"_blank\">Google Chrome Canary</a>.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Ilya Grigorik"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>In this introductory programming class, you\u2019ll learn Object Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You\u2019ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts.</p>\r\n<p>We\u2019ve heard that programming can be intimidating for newcomers, and we\u2019ve created this course to make sure that you have a great learning experience! You\u2019ll learn\u00a0actively\u00a0with our mini projects (see the awesome list below), which you\u2019ll be able to share proudly with your friends. You\u2019ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way.</p>\r\n<p>You\u2019ll pick up some great tools for your programming toolkit in this course! You will:</p>\r\n<ul>\r\n<li>Start coding in the programming language Python;</li>\r\n<li>Reuse and share code with Object Oriented Programming;</li>\r\n<li>Create and share amazing, life-hacking projects!\u00a0</li>\r\n</ul>\r\n<p>This introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object Oriented Programming will propel your career in tech forward, and it\u2019s also a great way to learn how software engineers think about solving problems.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>You should take this course if you want to build awesome projects, while writing only a few lines of code. Here are some of them:</p>\r\n<ul>\r\n<li>Project Take a Break: Do you know a friend who works too many hours? We will write a program that schedules breaks throughout the day -- reminding your friend to listen to music, get up and dance to their favorite song, or just walk away from the computer every once in awhile.<a href=\"http://youtu.be/C29aerpwkc8\" target=\"_blank\">http://youtu.be/C29aerpwkc8</a></li>\r\n<li>Project Profanity Editor: Imagine it\u2019s late at night and you get an email from your boss, requesting your help with something. You reply, \u201cI can take a shot at it\u201d but accidentally end up including an awkward word (sh*t). Oops. We will write a python program that detects curse words, and saves clumsy email writers from embarrassing moments.\u00a0<a href=\"http://youtu.be/Rvj2UI-wVXA\" target=\"_blank\">http://youtu.be/Rvj2UI-wVXA</a></li>\r\n<li>Movie Website: We will learn how to make an awesome webpage that lists your favorite movies and shows their trailers.\u00a0<a href=\"https://www.youtube.com/watch?v=X0FoelOIZM0&amp;t=1m24s\" target=\"_blank\">https://www.youtube.com/watch?v=X0FoelOIZM0&amp;t=1m24s</a>\u00a0</li>\r\n</ul>\r\n<p>While building these projects we will learn about a programming technique that is used by software engineers on a daily basis; it is called Object Oriented Programming.</p>\r\n<p>Finally, we will work together to get better at reading help documents and using other people\u2019s code almost like lego blocks to build our programs. By building these projects, you\u2019ll become more confident in your ability to code and transition from \u201cprogramming looks like magic\u201d to \u201coh, I can do that.\u201d</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>We require some familiarity with the following programming ideas in any computer language (C++, Java, Python, English etc.):</p>\r\n<ul>\r\n<li>if statements</li>\r\n<li>loops</li>\r\n<li>functions\u00a0</li>\r\n</ul>\r\n<p>Don\u2019t worry if you feel you need a refresher on any of these programming ideas. That\u2019s ok. We will provide information that will remind you how to use these ideas when building programs.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Programming Foundations with Python: Learn Object-Oriented Programming"],
    "url": ["https://www.udacity.com/course/ud036"],
    "school": [],
    "syllabus": ["<p><strong>Lesson 0: Introduction (30 min)</strong></p>", "<p>We will begin with an introduction from the instructor. More specifically, we will talk about the projects we will build and the ideas we will learn in this course. Then we will conduct a short test to ensure you have all the prerequisites necessary for the course. Finally, we will work together to download Python on your computer.</p>", "<p><strong>Lesson 1: Using Functions (3.5 hours)</strong></p>", "<p>We will use functions (webbrowser.open and os.rename) from the Python Standard Library to build two projects in this lesson. After that we will present a scenario where using functions will not present a very elegant solution; this will illuminate the need for a new programming tool called Classes.</p>", "<p><strong>Lesson 2: Using Classes (5 hours)</strong></p>", "<p>Here we will learn about important object-oriented programming concepts like classes and instances. We will build three cool projects while using classes. These include drawing shapes with Turtle, sending text messages with Twilio and checking curse words with a function called open.</p>", "<p>We will leverage modules from within the Python Standard Library and also learn to download and use an external Python package (twilio).</p>", "<p><strong>Lesson 3: Making Classes (5 hours)</strong></p>", "<p>In this lesson we will learn to create our first class. While doing this we will build a website that plays trailers of your favorite movies. Here are some of the programming ideas we will learn in this lesson:</p>", "<ul>\r\n<li>How to create a class</li>\r\n<li>How to instantiate an object</li>\r\n<li>How to access class attributes and methods</li>\r\n<li>What is the self keyword</li>\r\n<li>What are constructors (__init__)</li>\r\n<li>What are DocStrings</li>\r\n<li>How to create and access Class Variables</li>\r\n<li>How does Inheritance work</li>\r\n<li>How to override methods &lt;br /&gt;</li>\r\n</ul>", "<p><strong>Final Project (6 hours)</strong></p>", "<p>Here, you will use the skills learned in this course to identify a problem statement and idea for a project. You will then identify step-by step directions (in simple English) to design a solution for the previously identified problem. Finally, you will use this design and your newly learned object-oriented programming skills to write code to realize your project.</p>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>We require some familiarity with the following programming ideas in any computer language (C++, Java, Python, English etc.):</p>", "<p>Don\u2019t worry if you feel you need a refresher on any of these programming ideas. That\u2019s ok. We will provide information that will remind you how to use these ideas when building programs.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Kunal Chawla"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>Everyone designs. Design occurs anytime you deliberately change an environment to make things better. When you decide what seat to take in an auditorium you\u2019re designing your experience. When you rearrange the furniture in a room or draft an email, you\u2019re designing.</p>", "<p>This course provides a summary of key concepts from the first two chapters of\u00a0<a href=\"http://www.amazon.com/gp/product/0465050654/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0465050654&amp;linkCode=as2&amp;tag=udacity-20\">The Design of Everyday Things</a>\u00a0(Revised and Expanded Edition, November 2013) by Don Norman. It\u2019s intended to be enjoyable and informative for anyone curious about design: everyday people, technical people, designers, and non-designers alike.</p>"],
    "name": ["The Design of Everyday Things"],
    "url": ["https://www.udacity.com/course/design101"],
    "school": [],
    "syllabus": ["<p>Lesson 1: Affordances and Signifiers (4 hours)</p>", "<p>Lesson 2: Conceptual Models and the System Image (4 hours)</p>", "<p>Lesson 3: Gulfs of Evaluation and Execution (1 hour)</p>", "<p>Lesson 3 Project: Design the User Interface (UI) for a Timebank (7 hours)</p>", "<p>*The times include watching instructional videos, completing the course exercises, and finishing projects. In total, this course should take an average of 16 hours.</p>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>There are no prerequisites for the course; it\u2019s for anyone curious about basic design principles.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Don Norman and Kristian Simsarian"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div class=\"pretty-format\">\r\n<p><em>This is the second course in the 3-course Machine Learning Series and is offered at Georgia Tech as CS7641.</em></p>\r\n<p>Ever wonder how Netflix can predict what movies you'll like? Or how Amazon knows what you want to buy before you do? The answer can be found in Unsupervised Learning!</p>\r\n<p>Closely related to pattern recognition, Unsupervised Learning is about analyzing data and looking for patterns. It is an extremely powerful tool for identifying structure in data. This course focuses on how you can use Unsupervised Learning approaches -- including randomized optimization, clustering, and feature selection and transformation -- to find structure in unlabeled data.</p>\r\n<p>Series Information: Machine Learning is a graduate-level series of 3 courses, covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences.</p>\r\n<ul>\r\n<li><a href=\"https://www.udacity.com/course/ud675\">Machine Learning 1: Supervised Learning</a></li>\r\n<li><a href=\"https://www.udacity.com/course/ud741\">Machine Learning 2: Unsupervised Learning</a>\u00a0(this course)</li>\r\n<li><a href=\"https://www.udacity.com/course/ud820\">Machine Learning 3: Reinforcement Learning</a></li>\r\n</ul>\r\n<p>If you are new to Machine Learning, we recommend you take these 3 courses in order.</p>\r\n<p>The entire series is taught as an engaging dialogue between two eminent Machine Learning professors and friends: Professor Charles Isbell (Georgia Tech) and Professor Michael Littman (Brown University).</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div class=\"pretty-format\">\r\n<p>You will learn about and practice a variety of Unsupervised Learning approaches, including: randomized optimization, clustering, feature selection and transformation, and information theory.</p>\r\n<p>You will learn important Machine Learning methods, techniques and best practices, and will gain experience implementing them in this course through a hands-on final project in which you will be designing a movie recommendation system (just like Netflix!).</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div class=\"pretty-format\">\r\n<p>We recommend you take\u00a0<a href=\"https://www.udacity.com/ud675\">Machine Learning 1: Supervised Learning</a>\u00a0prior to taking this course.</p>\r\n<p>This class will assume that you have programming experience as you will be expected to work with python libraries such as numpy and scikit. A good grasp of probability and statistics is also required. Udacity's\u00a0<a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a>, especially\u00a0<a href=\"https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822\">Lessons 8, 9 and 10</a>, may be a useful refresher.</p>\r\n<p>An introductory course like Udacity's\u00a0<a href=\"https://www.udacity.com/course/cs271\">Introduction to Artificial Learning</a>\u00a0also provides a helpful background for this course.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Machine Learning 2\u2014Unsupervised Learning"],
    "url": ["https://www.udacity.com/course/ud741"],
    "school": ["Brown University", "Georgia Institute of Technology"],
    "syllabus": ["<strong>Lesson 1: Randomized optimization</strong>", "<ul>\r\n<li>Optimization, randomized</li>\r\n<li>Hill climbing</li>\r\n<li>Random restart hill climbing</li>\r\n<li>Simulated annealing</li>\r\n<li>Annealing algorithm</li>\r\n<li>Properties of simulated annealing</li>\r\n<li>Genetic algorithms</li>\r\n<li>GA skeleton</li>\r\n<li>Crossover example</li>\r\n<li>What have we learned</li>\r\n<li>MIMIC</li>\r\n<li>MIMIC: A probability model</li>\r\n<li>MIMIC: Pseudo code</li>\r\n<li>MIMIC: Estimating distributions</li>\r\n<li>Finding dependency trees</li>\r\n<li>Probability distribution</li>\r\n</ul>", "<strong>Lesson 2: Clustering</strong>", "<ul>\r\n<li>Clustering and expectation maximization</li>\r\n<li>Basic clustering problem</li>\r\n<li>Single linkage clustering (SLC)</li>\r\n<li>Running time of SLC</li>\r\n<li>Issues with SLC</li>\r\n<li>K-means clustering</li>\r\n<li>K-means in Euclidean space</li>\r\n<li>K-means as optimization</li>\r\n<li>Soft clustering</li>\r\n<li>Maximum likelihood Gaussian</li>\r\n<li>Expectation Maximization (EM)</li>\r\n<li>Impossibility theorem</li>\r\n</ul>", "<strong>Lesson 3: Feature Selection</strong>", "<ul>\r\n<li>Algorithms</li>\r\n<li>Filtering and Wrapping</li>\r\n<li>Speed</li>\r\n<li>Searching</li>\r\n<li>Relevance</li>\r\n<li>Relevance vs. Usefulness</li>\r\n</ul>", "<strong>Lesson 4: Feature Transformation</strong>", "<ul>\r\n<li>Feature Transformation</li>\r\n<li>Words like Tesla</li>\r\n<li>Principal Components Analysis</li>\r\n<li>Independent Components Analysis</li>\r\n<li>Cocktail Party Problem</li>\r\n<li>Matrix</li>\r\n<li>Alternatives</li>\r\n</ul>", "<strong>Lesson 5: Information Theory</strong>", "<ul>\r\n<li>History -Sending a Message</li>\r\n<li>Expected size of the message</li>\r\n<li>Information between two variables</li>\r\n<li>Mutual information</li>\r\n<li>Two Independent Coins</li>\r\n<li>Two Dependent Coins</li>\r\n<li>Kullback Leibler Divergence</li>\r\n</ul>", "<strong>Unsupervised Learning Project</strong>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>We recommend you take\u00a0<a href=\"https://www.udacity.com/ud675\">Machine Learning 1: Supervised Learning</a>\u00a0prior to taking this course.</p>", "<p>This class will assume that you have programming experience as you will be expected to work with python libraries such as numpy and scikit. A good grasp of probability and statistics is also required. Udacity's\u00a0<a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a>, especially\u00a0<a href=\"https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822\">Lessons 8, 9 and 10</a>, may be a useful refresher.</p>", "<p>An introductory course like Udacity's\u00a0<a href=\"https://www.udacity.com/course/cs271\">Introduction to Artificial Learning</a>\u00a0also provides a helpful background for this course.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Charles Isbell and Michael Littman"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>UX (User Experience) is a big deal. Though the term is often confused with User Interface, UI is only only a tiny subset of UX (we\u2019ll talk about the difference in Lesson 1).</p>", "<p>This is a UX design course built for current (and aspiring) mobile developers. In this short course, you'll step back from your IDE and dive into the techniques that great designers use to plan and prototype amazing apps before any code is written.</p>"],
    "name": ["UX Design for Mobile Developers:  Learn to Design a 5-star Android App"],
    "url": ["https://www.udacity.com/course/ud849"],
    "school": ["Google"],
    "syllabus": ["<p><strong>LESSON 1: WHAT IS USER EXPERIENCE?</strong></p>", "<p>In this lesson you will think about User Experience from the highest level. You will break down complex apps into a small number of simple steps and think about their big picture flow (including ones that you have worked on in the past or are currently working on).</p>", "<p>Topics covered:</p>", "<ul>\r\n<li>What is UX?</li>\r\n<li>UI vs. UX</li>\r\n<li>High-level planning</li>\r\n<li>Low-fi wireframing and prototyping</li>\r\n<li>Two concrete app improvements to implement now</li>\r\n</ul>", "<p><strong>LESSON 2: USER-CENTERED DESIGN</strong></p>", "<p>In this lesson you will learn how to design apps that your users will love. You will learn the importance of user-centered design, what happens when you design for everyone/no one (spoiler alert: it\u2019s generally bad), and how to effectively use tools like personas and use cases to ensure a baseline level of quality for anything you build. You will also learn a bit about how to use cheap and easy user research techniques to make well-informed design decisions.</p>", "<p>Topics covered:</p>", "<ul>\r\n<li>The perils of ignoring your user</li>\r\n<li>How to create effective personas and use cases</li>\r\n<li>Low cost user research</li>\r\n<li>How to use personas and use cases to inform feature lists</li>\r\n</ul>", "<p><strong>LESSON 3: DESIGNING FOR MOBILE CONSTRAINTS</strong></p>", "<p>Mobile design and development come with constraints and opportunities. This lesson is about the constraints. You will learn what constraints are inherent to mobile development and how to use design tools and techniques to ensure your app actually respects those constraints.</p>", "<p>Topics covered:</p>", "<ul>\r\n<li>The 5 big constraints: limited data, finite battery, hand-held usage, divided user attention, and small screens.</li>\r\n<li>The implications of these constraints and what happens when you get them wrong.</li>\r\n<li>Advanced wireframing</li>\r\n</ul>", "<p><strong>LESSON 4: DESIGNING FOR ANDROID DELIGHT</strong></p>", "<p>At this point, you will already know how to make a solid mobile app that users like. But like isn\u2019t enough! In order to be really successful, your app needs to be\u00a0loved. In this lesson, you\u2019ll learn how to leverage the power of Android by using device sensors and Google APIs to understand your user\u2019s context.</p>", "<p>Topics covered:</p>", "<ul>\r\n<li>Android sensors</li>\r\n<li>The importance of contextual apps</li>\r\n<li>The \u201ccomponents\u201d of context</li>\r\n<li>Android APIs (Google Play Services)</li>\r\n</ul>", "<p><strong>Final Project</strong></p>", "<p>Your final project will be the high / mid-level design specifications for your own incredible android app. You'll begin work on this project in the Assignments for Lesson 2 and continue working on it until the end of the course.</p>", "<p>When it's finished, you will have the blueprint for an app that will:</p>", "<ul>\r\n<li>Be designed for a specific target user.</li>\r\n<li>Have an almost-perfect high level flow.</li>\r\n<li>Avoid all major mobile pitfalls.</li>\r\n<li>Use Android sensors and APIs to understand your user's context and deliver context-aware moments of amazement that they will love.</li>\r\n</ul>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course is optimized for the developer who is looking to efficiently learn the most important design techniques that will help them make better apps (with a focus on mobile/Android).</p>

<p>That said, programming experience is not required to benefit from the design principles and best practices we teach in this course.</p>
</div>
                        <p>See the <a href="/tech-requirements" target="_blank">Technology Requirements</a> for using Udacity</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Nazmul Idris"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>This is the third and final course of the 3-course Machine Learning Series and is offered at Georgia Tech as CS7641.</p>\r\n<p>Can we program machines to learn like humans? This Reinforcement Learning course will teach you the algorithms for designing self-learning agents like us!</p>\r\n<p>Reinforcement Learning is the area of Machine Learning concerned with the actions that software agentsought\u00a0to take in a particular environment in order to maximize rewards. You can apply Reinforcement Learning to robot control, chess, backgammon, checkers, and other activities that a software agent can learn. Reinforcement Learning uses behaviorist psychology in order to achieve reward maximization.</p>\r\n<p>This course includes important Reinforcement Learning approaches like Markov Decision Processes and Game Theory. Please refer to the Syllabus for a detailed breakdown of topics.</p>\r\n<p>Series Information: Machine Learning is a graduate-level series of 3 courses, covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences.</p>\r\n<ul>\r\n<li><a href=\"https://www.udacity.com/course/ud675\">Machine Learning 1: Supervised Learning</a></li>\r\n<li><a href=\"https://www.udacity.com/course/ud741\">Machine Learning 2: Unsupervised Learning</a></li>\r\n<li><a href=\"https://www.udacity.com/course/ud820\">Machine Learning 3: Reinforcement Learning</a>\u00a0(this course)</li>\r\n</ul>\r\n<p>If you are new to Machine Learning, we recommend you take these 3 courses in order.</p>\r\n<p>The entire series is taught as a lively and rigorous dialogue between two eminent Machine Learning professors and friends: Professor Charles Isbell (Georgia Tech) and Professor Michael Littman (Brown University).</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>You will learn about Reinforcement Learning, the field of Machine Learning concerned with the actions that software agents\u00a0ought\u00a0to take in a particular environment in order to maximize rewards.</p>\r\n<p>Michael: Reinforcement Learning is a very popular field.\u00a0<br>Charles: Perhaps because\u00a0you're\u00a0in it, Michael.\u00a0<br>Michael: I don't think that's it.</p>\r\n<p>In this course, you will gain an understanding of topics and methods in Reinforcement Learning, including Markov Decision Processes and Game Theory. You will gain experience implementing Reinforcement Learning techniques in a final project.</p>\r\n<p>In the final project, we\u2019ll bring back the 80's and design a Pacman agent capable of eating all the food without getting eaten by monsters.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>We recommend you take\u00a0<a href=\"http://www.udacity.com/ud675\">Machine Learning 1: Supervised Learning</a>\u00a0and\u00a0<a href=\"http://www.udacity.com/ud741\">Machine Learning 2: Unsupervised Learning</a>\u00a0prior to taking this course.</p>\r\n<p>An introductory course like Udacity's\u00a0<a href=\"https://www.udacity.com/course/cs271\">Introduction to Artificial Learning</a>\u00a0provides a helpful background for this course. Programming experience (for example, taking Udacity's\u00a0<a href=\"https://www.udacity.com/course/cs101\">Introduction to CS</a>), and basic familiarity with statistics and probability theory is required. Udacity's\u00a0<a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a>, especially\u00a0<a href=\"https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822\">Lessons 8, 9 and 10</a>, is helpful.</p>\r\n<p>The most important prerequisite for enjoying and doing well in this class is your interest in the material.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Machine Learning 3\u2014Reinforcement Learning"],
    "url": ["https://www.udacity.com/course/ud820"],
    "school": ["Brown University", "Georgia Institute of Technology"],
    "syllabus": ["<strong>Lesson 1: Markov Decision Processes</strong>", "<ul>\r\n<li>Decision Making and Reinforcement Learning</li>\r\n<li>Markov Decision Processes</li>\r\n<li>Sequences of Rewards</li>\r\n<li>Assumptions</li>\r\n<li>Policies</li>\r\n<li>Finding Policies</li>\r\n</ul>", "<strong>Lesson 2: Reinforcement Learning</strong>", "<ul>\r\n<li>Rat Dinosaurs</li>\r\n<li>API</li>\r\n<li>Three Approaches to RL</li>\r\n<li>A New Kind of Value Function</li>\r\n<li>Estimating Q from Transitions</li>\r\n<li>Q Learning Convergence</li>\r\n<li>Greedy Expoloration</li>\r\n</ul>", "<strong>Lesson 3: Game Theory</strong>", "<ul>\r\n<li>What is Game Theory</li>\r\n<li>Minimax</li>\r\n<li>Fundamental Result</li>\r\n<li>Game Tree</li>\r\n<li>Von Neumann</li>\r\n<li>Center Game</li>\r\n<li>Snitch</li>\r\n<li>A Beautiful Equilibrium</li>\r\n<li>The Two Step</li>\r\n<li>2Step2Furious</li>\r\n</ul>", "<strong>Lesson 4: Game Theory, Continued</strong>", "<ul>\r\n<li>The Sequencing</li>\r\n<li>Iterated Prisioner\u2019s Dilemna</li>\r\n<li>Uncertain End</li>\r\n<li>Tit for Tat</li>\r\n<li>Finite State Strategy</li>\r\n<li>Folk Theorem</li>\r\n<li>Security Level Profile</li>\r\n<li>Grim Trigger</li>\r\n<li>Implausible Threats</li>\r\n<li>Pavlov</li>\r\n<li>Computational Folk Theorem</li>\r\n<li>Stochastic Games and Multiagent RL</li>\r\n<li>Zero Sum Stochastic Games</li>\r\n<li>General Sum Games</li>\r\n</ul>", "<strong>Reinforcement Learning Project</strong>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>We recommend you take\u00a0<a href=\"http://www.udacity.com/ud675\">Machine Learning 1: Supervised Learning</a>\u00a0and\u00a0<a href=\"http://www.udacity.com/ud741\">Machine Learning 2: Unsupervised Learning</a>\u00a0prior to taking this course.</p>", "<p>An introductory course like Udacity's\u00a0<a href=\"https://www.udacity.com/course/cs271\">Introduction to Artificial Learning</a>\u00a0provides a helpful background for this course. Programming experience (for example, taking Udacity's\u00a0<a href=\"https://www.udacity.com/course/cs101\">Introduction to CS</a>), and basic familiarity with statistics and probability theory is required. Udacity's\u00a0<a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a>, especially\u00a0<a href=\"https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822\">Lessons 8, 9 and 10</a>, is helpful.</p>", "<p>The most important prerequisite for enjoying and doing well in this class is your interest in the material.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Charles Isbell and Michael Littman"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>Exploratory Data Analysis (EDA) is an approach to data analysis for summarizing and visualizing the important characteristics of a data set. Promoted by\u00a0<a href=\"http://en.wikipedia.org/wiki/John_Tukey\">John Tukey</a>, EDA focuses on exploring data to understand the data\u2019s underlying structure and variables, to develop intuition about the data set, consider how that data set came into existence, and decide how it can be investigated with more formal statistical methods.</p>\r\n<p>If you're interested in supplemental reading material for the course check out the\u00a0<a href=\"http://www.amazon.com/gp/product/0201076160/ref=as_li_ss_il?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0201076160&amp;linkCode=as2&amp;tag=udacity-20\">Exploratory Data Analysis</a>book. (Not Required)</p>\r\n</div>\r\n<strong>Why Take This Course?</strong>\r\n<div>\r\n<p>You will...</p>\r\n<ul>\r\n<li>Understand EDA as a journey and a way to explore data</li>\r\n<li>Explore data at multiple levels using appropriate visualizations</li>\r\n<li>Acquire statistical knowledge for summarizing data</li>\r\n<li>Demonstrate curiosity and skepticism when performing EDA</li>\r\n<li>Develop intuition around a data set and understand how the data was generated.</li>\r\n</ul>\r\n</div>\r\n<strong>Prerequisites and Requirements</strong>\r\n<div>\r\n<p>A background in statistics is helpful but not required. Consider taking\u00a0<a href=\"https://www.udacity.com/course/st095\">Statistics: The Science of Decisions</a>prior to taking this course. Relevant topics include:</p>\r\n<ul>\r\n<li>Mean, median, mode</li>\r\n<li>Normal, uniform, and skewed distributions</li>\r\n<li>Histograms and box plots</li>\r\n</ul>\r\n<p><br>Familiarity with the following CS and Math topics will help students:</p>\r\n<ul>\r\n<li>Variable assignment</li>\r\n<li>Comparison and logical operators ( &lt;, &gt;, &lt;=, &gt;=, ==, &amp;, | )</li>\r\n<li>If else statements</li>\r\n<li>Square roots, logarithms, and exponentials</li>\r\n</ul>\r\n</div>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>\r\n</div>\r\n</div>"],
    "name": ["Exploratory Data Analysis"],
    "url": ["https://www.udacity.com/course/ud651"],
    "school": ["Facebook"],
    "syllabus": ["<strong>Lesson 1: What is EDA? (1 hour)</strong>", "<p>We'll start by learn about what exploratory data analysis (EDA) is and why it is important. You'll meet the amazing instructors for the course and find out about the course structure and final project.</p>", "<strong>Lesson 2: R Basics (3 hours)</strong>", "<p>EDA, which comes before formal hypothesis testing and modeling, makes use of visual methods to analyze and summarize data sets. R will be our tool for generating those visuals and conducting analyses. In this lesson, we will install RStudio and packages, learn the layout and basic commands of R, practice writing basic R scripts, and inspect data sets.</p>", "<strong>Lesson 3: Explore One Variable (4 hours)</strong>", "<p>We perform EDA to understand the distribution of a variable and to check for anomalies and outliers. Learn how to quantify and visualize individual variables within a data set as we begin to make sense of a pseudo-data set of Facebook users. While the data set does not contain real user data, it does contain a wealth of information. Through the lesson, we will create histograms and boxplots, transform variables, and examine tradeoffs in visualizations.</p>", "<strong>Problem Set 3 (2 hours)</strong>", "<strong>Lesson 4: Explore Two Variables (4 hours)</strong>", "<p>EDA allows us to identify the most important variables and relationships within a data set before building predictive models. In this lesson, we will learn techniques for exploring the relationship between any two variables in a data set. We'll create scatter plots, calculate correlations, and investigate conditional means.</p>", "<strong>Problem Set 4 (2 hours)</strong>", "<strong>Lesson 5: Explore Many Variables (4 hours)</strong>", "<p>Data sets can be complex. In this lesson, we will learn powerful methods and visualizations for examining relationships among multiple variables. We'll learn how to reshape data frames and how to use aesthetics like color and shape to uncover more information. Extending our knowledge of previous plots, we'll continue to build intuition around the Facebook data set and explore some new data sets as well.</p>", "<strong>Problem Set 5 (2 hours)</strong>", "<strong>Lesson 6: Diamonds and Price Predictions (2 hours)</strong>", "<p>Investigate the diamonds data set alongside Facebook Data Scientist, Solomon Messing. He'll recap many of the strategies covered in the course and show how predictive modeling can allow us to determine a good price for a diamond. As a final project, you will create your own exploratory data analysis on a data set of your choice.</p>", "<strong>Final Project (10+ hours)</strong>", "<p>You've explored simulated Facebook user data and the diamonds data set. Now, it's your turn to conduct your own exploratory data analysis. Choose one data set to explore (one provided by Udacity or your own) and create a RMD file that uncovers the patterns, anomalies and relationships of the data set.</p>"],
    "length": ["8 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>A background in statistics is helpful but not required. Consider taking\u00a0<a href=\"https://www.udacity.com/course/st095\">Statistics: The Science of Decisions</a>prior to taking this course. Relevant topics include:</p>", "<p><br>Familiarity with the following CS and Math topics will help students:</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Moira Burke and Dean Eckles"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>This is the first course in the 3-course Machine Learning Series and is offered at Georgia Tech as CS7641.</p>\r\n<p>Please note that this is first course is different in structure compared to most Udacity CS courses. There is a final project at the end of the course, and there are no programming quizzes throughout this course.</p>\r\n<p>This course covers Supervised Learning, a machine learning task that makes it possible for your phone to recognize your voice, your email to filter spam, and for computers to learn a bunch of other cool stuff.</p>\r\n<p>Supervised Learning is an important component of all kinds of technologies, from stopping credit card fraud, to finding faces in camera images, to recognizing spoken language. Our goal is to give you the skills that you need to understand these technologies and interpret their output, which is important for solving a range of data science problems. And for surviving a robot uprising.</p>\r\n<p>Series Information: Machine Learning is a graduate-level series of 3 courses, covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences.</p>\r\n<ul>\r\n<li><a href=\"https://www.udacity.com/course/ud675\">Machine Learning 1: Supervised Learning</a>\u00a0(this course)</li>\r\n<li><a href=\"https://www.udacity.com/course/ud741\">Machine Learning 2: Unsupervised Learning</a></li>\r\n<li><a href=\"https://www.udacity.com/course/ud820\">Machine Learning 3: Reinforcement Learning</a></li>\r\n</ul>\r\n<p>If you are new to Machine Learning, we recommend you take these 3 courses in order.</p>\r\n<p>The entire series is taught as a lively and rigorous dialogue between two eminent Machine Learning professors and friends: Professor Charles Isbell (Georgia Tech) and Professor Michael Littman (Brown University).</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>In this course, you will gain an understanding of a variety of topics and methods in Supervised Learning. Like function approximation in general, Supervised Learning prompts you to make generalizations based on fundamental assumptions about the world.</p>\r\n<p>Michael: So why wouldn't you call it \"function induction?\"<br>Charles: Because someone said \"supervised learning\" first.</p>\r\n<p>Topics covered in this course include: Decision trees, neural networks, instance-based learning, ensemble learning, computational learning theory, Bayesian learning, and many other fascinating machine learning concepts.</p>\r\n<p>In your final project, you will explore important techniques in Supervised Learning, and apply your knowledge to analyze how algorithms behave under a variety of circumstances.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>A strong familiarity with Probability Theory, Linear Algebra and Statistics is required. An understanding of<a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a>, especially\u00a0<a href=\"https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822\">Lessons 8, 9 and 10</a>, would be helpful.</p>\r\n<p>Students should also have some experience in programming (perhaps through\u00a0<a href=\"https://www.udacity.com/course/cs101\">Introduction to CS</a>) and a familiarity with Neural Networks (as covered in\u00a0<a href=\"https://www.udacity.com/course/cs271\">Introduction to Artificial Learning</a>).</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Machine Learning 1\u2014Supervised Learning"],
    "url": ["https://www.udacity.com/course/ud675"],
    "school": ["Brown University", "Georgia Institute of Technology"],
    "syllabus": ["<strong>Lesson 0: Machine Learning is the ROX</strong>", "<ul>\r\n<li>Definition of Machine Learning</li>\r\n<li>Supervised learning</li>\r\n<li>Induction and deduction</li>\r\n<li>Unsupervised learning</li>\r\n<li>Reinforcement learning</li>\r\n</ul>", "<strong>Lesson 1: Decision Trees</strong>", "<ul>\r\n<li>Classification and Regression overview</li>\r\n<li>Classification learning</li>\r\n<li>Example: Dating</li>\r\n<li>Representation</li>\r\n<li>Decision trees learning</li>\r\n<li>Decision tree expressiveness</li>\r\n<li>ID3 algorithm</li>\r\n<li>ID3 bias</li>\r\n<li>Decision trees and continuous attributes</li>\r\n</ul>", "<strong>Lesson 2: Regression and Classification</strong>", "<ul>\r\n<li>Regression and function approximation</li>\r\n<li>Linear regression and best fit</li>\r\n<li>Order of polynomial</li>\r\n<li>Polynomial regression</li>\r\n<li>Cross validation</li>\r\n</ul>", "<strong>Lesson 3: Neural Networks</strong>", "<ul>\r\n<li>Artificial neural networks</li>\r\n<li>Perceptron units</li>\r\n<li>XOR as perceptron network</li>\r\n<li>Perceptron training</li>\r\n<li>Gradient descent</li>\r\n<li>Comparison of learning rules</li>\r\n<li>Sigmoid function</li>\r\n<li>Optimizing weights</li>\r\n<li>Restriction bias</li>\r\n<li>Preference bias</li>\r\n</ul>", "<strong>Lesson 4: Instance-Based Learning</strong>", "<ul>\r\n<li>Instance based learning before</li>\r\n<li>Instance based learning now</li>\r\n<li>K-NN algorithm</li>\r\n<li>Won\u2019t you compute my neighbors?</li>\r\n<li>Domain K-NNowledge</li>\r\n<li>K-NN bias</li>\r\n<li>Curse of dimensionality</li>\r\n</ul>", "<strong>Lesson 5: Ensemble B&amp;B</strong>", "<ul>\r\n<li>Ensemble learning: Boosting</li>\r\n<li>Ensemble learning algorithm</li>\r\n<li>Ensemble learning outputs</li>\r\n<li>Weak learning</li>\r\n<li>Boosting in code</li>\r\n<li>When D agrees</li>\r\n</ul>", "<strong>Lesson 6: Kernel Methods and Support Vector Machines (SVM)s</strong>", "<ul>\r\n<li>Support Vector Machines</li>\r\n<li>Optimal separator</li>\r\n<li>SVMs: Linearly married</li>\r\n<li>Kernel methods</li>\r\n</ul>", "<strong>Lesson 7: Computational Learning Theory</strong>", "<ul>\r\n<li>Computational Learning Theory</li>\r\n<li>Learning theory</li>\r\n<li>Resources in Machine Learning</li>\r\n<li>Defining inductive learning</li>\r\n<li>Teacher with constrained queries</li>\r\n<li>Learner with constrained queries</li>\r\n<li>Learner with mistake bounds</li>\r\n<li>Version spaces</li>\r\n<li>PAC learning</li>\r\n<li>Epsilon exhausted</li>\r\n<li>Haussler theorem</li>\r\n</ul>", "<strong>Lesson 8: VC Dimensions</strong>", "<ul>\r\n<li>Infinite hypothesis spaces</li>\r\n<li>Power of a hypothesis space</li>\r\n<li>What does VC stand for?</li>\r\n<li>Internal training</li>\r\n<li>Linear separators</li>\r\n<li>The ring</li>\r\n<li>Polygons</li>\r\n<li>Sampling complexity</li>\r\n<li>VC of finite H</li>\r\n</ul>", "<strong>Lesson 9: Bayesian Learning</strong>", "<ul>\r\n<li>Bayes Rule</li>\r\n<li>Bayesian learning</li>\r\n<li>Bayesian learning in action!</li>\r\n<li>Noisy data</li>\r\n<li>Best hypothesis</li>\r\n<li>Minimum description length</li>\r\n<li>Bayesian classification</li>\r\n</ul>", "<strong>Lesson 10: Bayesian Inference</strong>", "<ul>\r\n<li>Joint distribution</li>\r\n<li>Adding attributes</li>\r\n<li>Conditional independence</li>\r\n<li>Belief networks</li>\r\n<li>Sampling from the joint distribution</li>\r\n<li>Recovering the joint distribution</li>\r\n<li>Inferencing rules</li>\r\n<li>Na\u00efve Bayes</li>\r\n<li>Why Na\u00efve Bayes is cool</li>\r\n</ul>", "<strong>Supervised Learning Final Project: Using Machine Learning to Analyze Datasets</strong>"],
    "length": ["8 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>A strong familiarity with Probability Theory, Linear Algebra and Statistics is required. An understanding of<a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a>, especially\u00a0<a href=\"https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822\">Lessons 8, 9 and 10</a>, would be helpful.</p>", "<p>Students should also have some experience in programming (perhaps through\u00a0<a href=\"https://www.udacity.com/course/cs101\">Introduction to CS</a>) and a familiarity with Neural Networks (as covered in\u00a0<a href=\"https://www.udacity.com/course/cs271\">Introduction to Artificial Learning</a>).</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Charles Isbell and Michael Littman"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this!</p>", "<p>Students will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework.</p>", "<p>This is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data.</p>"],
    "name": ["Data Wrangling with MongoDB"],
    "url": ["https://www.udacity.com/course/ud032"],
    "school": ["MongoDB University"],
    "syllabus": ["<strong>Syllabus</strong>", "<div>\r\n<strong>Lesson 1: Data Extraction Fundamentals</strong>\r\n<ul>\r\n<li>Assessing the Quality of Data</li>\r\n<li>Intro to Tabular Formats</li>\r\n<li>Parsing CSV</li>\r\n<li>Parsing XLS with XLRD</li>\r\n<li>Intro to JSON</li>\r\n<li>Using Web APIs</li>\r\n</ul>\r\n<strong>Lesson 2: Data in More Complex Formats</strong>\r\n<ul>\r\n<li>Intro to XML</li>\r\n<li>XML Design Principles</li>\r\n<li>Parsing XML</li>\r\n<li>Web Scraping</li>\r\n<li>Parsing HTML</li>\r\n</ul>\r\n<strong>Lesson 3: Data Quality</strong>\r\n<ul>\r\n<li>What is Data Cleaning?</li>\r\n<li>Sources of Dirty Data</li>\r\n<li>Measuring Data Quality</li>\r\n<li>A Blueprint for Cleaning</li>\r\n<li>Auditing Validity</li>\r\n<li>Auditing Accuracy</li>\r\n<li>Auditing Completeness</li>\r\n<li>Auditing Consistency</li>\r\n<li>Auditing Uniformity</li>\r\n</ul>\r\n<strong>Lesson 4: Working with MongoDB</strong>\r\n<ul>\r\n<li>Data Modelling in MongoDB</li>\r\n<li>Introduction to PyMongo</li>\r\n<li>Field Queries</li>\r\n<li>Projection Queries</li>\r\n<li>Getting Data into MongoDB</li>\r\n<li>Using mongoimport</li>\r\n<li>Operators like $gt, $lt, $exists, $regex</li>\r\n<li>Querying Arrays and using $in and $all Operators</li>\r\n<li>Changing entries: $update, $set, $unset</li>\r\n</ul>\r\n<strong>Lesson 5: Analyzing Data</strong>\r\n<ul>\r\n<li>Examples of Aggregation Framework</li>\r\n<li>The Aggregation Pipeline</li>\r\n<li>Aggregation Operators: $match, $project, $unwind, $group</li>\r\n<li>Multiple Stages Using a Given Operator</li>\r\n</ul>\r\n<strong>Lesson 6: Case Study - OpenStreetMap Data</strong>\r\n<ul>\r\n<li>Using iterative parsing for large datafiles</li>\r\n<li>Open Street Map XML Overview</li>\r\n<li>Exercises around OpenStreetMap data</li>\r\n<li>Final Project Instructions</li>\r\n</ul>\r\n</div>"],
    "length": ["8 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>The ideal student should have the following skills:</p>", "<p>At least some experience using a unix shell or Windows PowerShell will be helpful, but is not required.</p>", "<p>No prior experience with databases is needed.</p>", "<p>About MongoDB\u00a0<br>This course is developed in conjunction with MongoDB, Inc., the originator and primary contributor to the open source database\u00a0<a href=\"https://github.com/mongodb\" target=\"_blank\">MongoDB</a>. MongoDB is the leading NoSQL database. Designed for how we build and run applications today, MongoDB empowers organizations to be more agile and scalable. It enables new types of applications, better customer experience, faster time to market and lower costs.</p>", "<p>Use important skills from data munging to improve OpenStreetMaps data for a part of the world that you care about and give back to the community.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Shannon Bradshaw"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>The Introduction to Data Science class will survey the foundational topics in data science, namely:</p>\r\n<ul>\r\n<li>Data Manipulation</li>\r\n<li>Data Analysis with Statistics and Machine Learning</li>\r\n<li>Data Communication with Information Visualization</li>\r\n<li>Data at Scale -- Working with Big Data</li>\r\n</ul>\r\n<p><br>The class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science.</p>\r\n</div>\r\n<strong>Why Take This Course?</strong>\r\n<div>\r\n<p>You will have an opportunity to work through a data science project end to end, from analyzing a dataset to visualizing and communicating your data analysis.</p>\r\n<p>Through working on the class project, you will be exposed to and understand the skills that are needed to become a data scientist yourself.</p>\r\n</div>\r\n<strong>Prerequisites and Requirements</strong>\r\n<div>\r\n<p>The ideal students for this class are prepared individuals who have:</p>\r\n<ul>\r\n<li>Strong interest in data science</li>\r\n<li>Background in intro level statistics</li>\r\n<li>Python programming experience</li>\r\n<li>Or understanding of programming concepts such as variables, functions, loops, and basic python data structures like lists and dictionaries</li>\r\n</ul>\r\n<p><br>If you need to brush up on your programming, we highly recommend\u00a0<a href=\"https://www.udacity.com/course/cs101\">Introduction to Computer Science: Building a Search Engine</a>. If you need a refresher on statistics, enroll in\u00a0<a href=\"https://www.udacity.com/course/st095\">Statistics: The Science of Decisions</a>. Both classes are on Udacity!</p>\r\n</div>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>\r\n</div>\r\n</div>"],
    "name": ["Intro to Data Science"],
    "url": ["https://www.udacity.com/course/ud359"],
    "school": [],
    "syllabus": ["<strong>Lesson 1: Introduction to Data Science</strong>", "<ul>\r\n<li>Introduction to Data Science</li>\r\n<li>What is a Data Scientist</li>\r\n<li>Pi-Chaun (Data Scientist @ Google): What is Data Science?</li>\r\n<li>Gabor (Data Scientist @ Twitter): What is Data Science?</li>\r\n<li>Problems Solved by Data Science</li>\r\n<li>Pandas</li>\r\n<li>Dataframes</li>\r\n<li>Create a New Dataframe</li>\r\n</ul>", "<strong>Lesson 2: Data Wrangling</strong>", "<ul>\r\n<li>What is Data Wrangling?</li>\r\n<li>Acquiring Data</li>\r\n<li>Common Data Formats</li>\r\n<li>What are Relational Databases?</li>\r\n<li>Aadhaar Data</li>\r\n<li>Aadhaar Data and Relational Databases</li>\r\n<li>Introduction to Databases Schemas</li>\r\n<li>API\u2019s</li>\r\n<li>Data in JSON Format</li>\r\n<li>How to Access an API efficiently</li>\r\n<li>Missing Values</li>\r\n<li>Easy Imputation</li>\r\n<li>Impute using Linear Regression</li>\r\n<li>Tip of the Imputation Iceberg</li>\r\n</ul>", "<strong>Lesson 3: Data Analysis</strong>", "<ul>\r\n<li>Statistical Rigor</li>\r\n<li>Kurt (Data Scientist @ Twitter) - Why is Stats Useful?</li>\r\n<li>Introduction to Normal Distribution</li>\r\n<li>T Test</li>\r\n<li>Welch T Test</li>\r\n<li>Non-Parametric Tests</li>\r\n<li>Non-Normal Data</li>\r\n<li>Stats vs. Machine Learning</li>\r\n<li>Different Types of Machine Learning</li>\r\n<li>Prediction with Regression</li>\r\n<li>Cost Function</li>\r\n<li>How to Minimize Cost Function</li>\r\n<li>Coefficients of Determination</li>\r\n</ul>", "<strong>Lesson 4: Data Visualization</strong>", "<ul>\r\n<li>Effective Information Visualization</li>\r\n<li>Napoleon's March on Russia</li>\r\n<li>Don (Principal Data Scientist @ AT&amp;T): Communicating Findings</li>\r\n<li>Rishiraj (Principal Data Scientist @ AT&amp;T): Communicating Findings Well</li>\r\n<li>Visual Encodings</li>\r\n<li>Perception of Visual Cues</li>\r\n<li>Plotting in Python</li>\r\n<li>Data Scales</li>\r\n<li>Visualizing Time Series Data</li>\r\n</ul>", "<strong>Lesson 5: MapReduce</strong>", "<ul>\r\n<li>Big Data and MapReduce</li>\r\n<li>Basics of MapReduce</li>\r\n<li>Mapper</li>\r\n<li>Reducer</li>\r\n<li>MapReduce with Aadhaar Data</li>\r\n<li>MapReduce Ecosystem</li>\r\n<li>Joshua (Data Scientist @ Twitter): MapReduce Tools, Pig</li>\r\n<li>MapReduce with Subway Data</li>\r\n</ul>"],
    "length": ["8 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>The ideal students for this class are prepared individuals who have:</p>", "<p><br>If you need to brush up on your programming, we highly recommend\u00a0<a href=\"https://www.udacity.com/course/cs101\">Introduction to Computer Science: Building a Search Engine</a>. If you need a refresher on statistics, enroll in\u00a0<a href=\"https://www.udacity.com/course/st095\">Statistics: The Science of Decisions</a>. Both classes are on Udacity!</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Dave Holtz"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>So you\u2019ve heard mobile is kind of a big deal, and you\u2019re not sure how to transform your traditional desktop-focused web apps into fast, effective mobile experiences. This course is designed to teach web developers what they need to know to create great cross-device mobile web experiences. This course will focus on building mobile web apps, which will work across multiple platforms including Android, iOS, and others.</p>"],
    "name": ["Mobile Web Development"],
    "url": ["https://www.udacity.com/course/cs256"],
    "school": ["Google"],
    "syllabus": ["<p>In this course, you will learn how to build web experiences that adapt to the different screen sizes and capabilities that mobile devices offer, and how to scalably optimize media for mobile and desktop. We will cover programming touch interaction, as well as how to optimize form field input for mobile devices and use APIs like geolocation and the accelerometer, and ensuring your web experiences work great when network conditions are sub-optimal. Finally, you\u2019ll gain the tools to investigate performance in mobile applications, with a strong understanding of mobile networking, battery usage patterns and optimizing paint techniques to build smooth animations on mobile.</p>", "<strong>Lesson 01: Syllabus</strong>", "<p>We\u2019ll start with a high-level overview of the course and what to expect in it. We\u2019ll also go into more depth on what we mean by mobile web development, and why you should care about it.</p>", "<strong>Lesson 02: Mobile Development Tools</strong>", "<p>Workflow and tooling is incredibly important for building great web apps, and this carries over to mobile web development. This lesson will show you how to use the Chrome Developer Tools to develop for the mobile web.</p>", "<strong>Lesson 03: Mobile UX and Viewport</strong>", "<p>Designing for the mobile web is all about a smooth user experience. This lesson will get you thinking about how to achieve that on mobile, and we\u2019ll introduce the first of many tools you need to achieve this: the viewport.</p>", "<strong>Lesson 04: Fluid Design</strong>", "<p>Mobile means lots of different devices and form factors. We\u2019ll discuss how to make your site responsive, clean, and user-friendly on multiple devices and layouts.</p>", "<strong>Lesson 05: Media Queries</strong>", "<p>Sometimes different devices call for fundamentally different layouts. This lesson will teach you how to achieve this using media queries.</p>", "<strong>Lesson 06: Responsive Images</strong>", "<p>Media requirements are different in mobile - network constraints and very high resolution screens set up a conflict that can be challenging. We\u2019ll talk about how best to integrate media into your mobile web applications, and adaptively scaling images based on the environment.</p>", "<strong>Lesson 07: Optimizing Performance</strong>", "<p>Users expect a fast, seamless experience on mobile. We\u2019ll go over optimizing various performance metrics to improve that experience, such as network, cpu, rendering, and battery performance.</p>", "<strong>Lesson 08: Touch</strong>", "<p>Touch input is fundamentally different from mouse input, and requires you to think about your user interactions differently. We\u2019ll go over UX concerns with touch-based interaction, and how to design user interactions that work across devices.</p>", "<strong>Lesson 09: Input</strong>", "<p>Using a keyboard on mobile is awful. We\u2019ll discuss ways to improve it, using semantic input for form data, and other user input options on mobile.</p>", "<strong>Lesson 10: Device Access</strong>", "<p>Mobile devices have a full array of sensors typically unavailable on desktop. We\u2019ll talk about camera access, geolocation, and other sensors and feedback you have access to on mobile.</p>", "<strong>Lesson 11: Offline and Storage</strong>", "<p>It\u2019s an unfortunate reality that mobile users aren\u2019t always online. We\u2019ll go over using the local cache as well as local storage APIs to give your users a great offline (and partially-online) experience as well.</p>", "<strong>Lesson 12: Wrap-up</strong>", "<p>We\u2019ll finish up the class by talking briefly about other topics to consider, such as app experience, monetization, deployment and distribution. We\u2019ll also point you to other resources to look at moving forward in your career.</p>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course is for experienced front-end web developers who\u2019d like to learn what it takes to create\u00a0<a href=\"http://www.chrome.com/racer\">great</a><a href=\"http://sketchpad.io/\">mobile</a>\u00a0experiences. In order to succeed in this class, you should be comfortable with HTML, CSS, and Javascript, and should have experience creating web apps, either professionally or for fun. You don't need to know any specific HTML5 extras or APIs, we'll cover any of those that we need as the course progresses.</p>", "<p>Design and build a mobile app that takes advantage of touch screen functionality.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Peter Lubbers and Chris Wilson"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code.</p>", "<p>By the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you\u2019d want to develop.</p>"],
    "name": ["Introduction to Salesforce App Development"],
    "url": ["https://www.udacity.com/course/ud162"],
    "school": ["Salesforce"],
    "syllabus": ["<p>In this class you\u2019ll learn the basics of building apps with Force.com, a part of Salesforce Platform. These apps are typically business apps: they solve organizational and logistical problems. You probably wouldn\u2019t use Salesforce to build a computer game (though you could!).</p>", "<div>\r\n<p>There are two ways to build apps in Force.com: with or without code. This class will only cover the non-coding, point-and-click app building interface. But don\u2019t be fooled! Building powerful apps does not require writing code.</p>\r\n<p>This class contains an introductory lesson, five primary lessons where you'll be building and learning (each of which has an accompanying problem set to practice your skills), and a final project where you'll put everything together.</p>\r\nLesson 0: What is Salesforce (15 mins)\r\n<p>What\u00a0is\u00a0Salesforce Platform? What does it do? Why should I learn about it? What kind of jobs can I get after I learn how to use it?</p>\r\n<p>In this lesson, you\u2019ll meet the instructors, get to know the class, and learn a bit about Salesforce in general.</p>\r\nLesson 1: Creating your First App (90 minutes)\r\n<p>In this lesson you\u2019ll get acquainted with Force.com and actually build the beginnings of your first app. You\u2019ll get some experience taking a big problem (in this case, managing a music festival), breaking it into smaller parts, and representing those parts in Salesforce. As you do this, you\u2019ll learn about the basic components of a Salesforce app and add some simple (but powerful) functionality to your app. More concretely, you\u2019ll learn about:</p>\r\n<ul>\r\n<li>Salesforce Data: Salesforce represents data as objects, fields, and records. You\u2019ll learn what these terms mean and build them into your app.</li>\r\n<li>Relationships: When the pieces of your app start communicating, interesting things can happen. In this lesson you\u2019ll learn the basics of Salesforce relationship fields.</li>\r\n<li>Validation Rules: If you\u2019ve ever incorrectly entered your credit card number into a website, you already know about validation rules. In this lesson, you\u2019ll learn how to build them into your app.</li>\r\n<li>Formulas and Summaries: These tools let you easily keep track of quantifiable things like money spent, customers contacted, or tickets sold. In this lesson you\u2019ll learn how to build these automated calculations into your app.</li>\r\n</ul>\r\nLesson 2: Building out your Data Model (90 mins)\r\n<p>Behind every powerful business app is a well-planned data model (also known as a schema). In this lesson you\u2019ll learn how to decompose a complex problem into its component pieces and then connect those pieces together with the appropriate relationship fields. The data model you build will serve as the schematic skeleton onto which you\u2019ll build dynamic functionality in later lessons. The specific topics covered are:</p>\r\n<ul>\r\n<li>One-to-Many Relationships: These relationships let the pieces of your app talk to each other. In this lesson you\u2019ll learn how and when (and why) to use master-detail and lookup relationships in the apps you build.</li>\r\n<li>Many-to-Many Relationships: You\u2019ll learn how to use a junction object to add flexibility into your data model.</li>\r\n<li>Customizing the User Interface: Good apps should be easy to use! In this lesson you\u2019ll learn how to configure the layout of your app to make sure the UI is simple and intuitive.</li>\r\n<li>Schema Builder: There are many ways to get things done in Salesforce. In this lesson you\u2019ll start using the schema builder to understand how your app works.</li>\r\n<li>Data Loading: This is a convenient way to get lots of data onto your app at once.</li>\r\n</ul>\r\nLesson 3: Visualizing your Data (45 mins)\r\n<p>No matter what kind of app you\u2019re building, you\u2019ve probably got some data that you want other people in your organization to understand quickly and easily. In this lesson you\u2019ll learn how quickly communicate information with real-time data visualizations. Specifically, you\u2019ll learn how to make:</p>\r\n<ul>\r\n<li>Reports: These let you gather related information into one place. These let you gather data according to specific criteria and display it in neat rows and columns.</li>\r\n<li>Charts: These let you graphically summarize the information in a report.</li>\r\n<li>Dashboards: Different people want access to different information. A dashboard is a collection of charts that give specific people in your organization exactly the information that they need in real-time.</li>\r\n<li>Views: Data is good, but sometimes you have too much. Views let you selectively and quickly display only the data you care about.</li>\r\n</ul>\r\nLesson 4: Adding Automation (45 mins)\r\n<p>In this lesson you\u2019ll think about how to use your app to automate manual tasks. You\u2019ll learn how to use two important Salesforce tools:</p>\r\n<ul>\r\n<li>Workflows: There are situations where a series of steps need to happen in sequence: first do this, then do that. Workflows let you automate processes like these, such as sending an email, assigning a task, or updating a field.</li>\r\n<li>Approval Processes: You don\u2019t want every job to be completely automated. Sometimes you need someone to step in and say \u201cthis looks good.\u201d Approval processes add a human element to your automated tasks.</li>\r\n</ul>\r\nLesson 5: Make it Social. Make it Mobile. (45 mins)\r\n<p>This is it. With a few clicks of the mouse you\u2019ll make your app social and mobile. The tools you\u2019ll use are:</p>\r\n<ul>\r\n<li>Chatter: This will let your users collaborate on the projects and records they work on together.</li>\r\n<li>Salesforce1: That web app you\u2019ve been building this whole time? It\u2019s actually a mobile app too. You\u2019ll even learn how to quickly customize your mobile interface and add functionality for mobile productivity.</li>\r\n</ul>\r\nFinal Project: Build your own App (2-4 hours)\r\n<p>By the time you get here, you will have already built a music festival management app. Now it\u2019s time to take your own idea and turn it into a functional web and mobile app.</p>\r\n</div>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Good news! You don't need any programming experience and you don't need to know anything about Salesforce. You'll learn the ins and outs of point-and-click development, so all you need now is an interest in building an app.</p>

<p>One thing you should know: the skills you learn in this course are in high demand and will help further your career.</p>
</div>
                        <p>See the <a href="/tech-requirements" target="_blank">Technology Requirements</a> for using Udacity</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Mario Korf and Samantha Ready"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>This course is a journey into the biology of the human genome and will highlight the scientific, social, and personal perspectives of people living with a variety of traits.</p>"],
    "name": ["Tales from the Genome"],
    "url": ["https://www.udacity.com/course/bio110"],
    "school": ["23andme"],
    "syllabus": ["<strong>Lesson 1: Introduction to traits and heredity</strong>", "<p>Trait variation and categorization, basic models of inheritance, and the connection via DNA. Check out the<a href=\"http://content.udacity-data.com/course/bio110/Lesson_1_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 2: Defining the genome</strong>", "<p>DNA structure, chromosomes, and genome organization. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_2_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 3: How a genome works</strong>", "<p>Protein coding genes, transcription, translation, discerning the genetic code, and alleles. Check out the<a href=\"http://content.udacity-data.com/course/bio110/Lesson_3_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 4: Gene regulation</strong>", "<p>Non-coding DNA, regulatory regions of genes, and transcription factors. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_4_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 5: Transmission of genes and traits</strong>", "<p>Family relationships and pedigrees, inheritance patterns, allele dominance, and chromosome dynamics. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_5_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 6: Origin of mutation/variation</strong>", "<p>Types of mutations, various causes of mutation, allelic frequency, and the spread of alleles in a population. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_6_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 7: How to obtain and interpret personal genetic information</strong>", "<p>Personalized genetics: sample acquisition, DNA extraction and processing, and interpretation of results. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_7_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 8: Simple genetic traits</strong>", "<p>Molecular causes of monogenic traits, loss-of-function vs. gain-of-function alleles, and dominance. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_8_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 9: Multifactorial traits</strong>", "<p>Polygenic traits, complex traits with an environmental effect, qualitative and quantitative measures, twin studies, relative risk, and genome-wide association studies (GWAS). Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_9_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 10: Pharmacogenetics: genes and drugs</strong>", "<p>Pharmacokinetics and pharmacodynamics, alleles affecting drug metabolism, and personalized medicine. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_10_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 11: Human ancestry and evolution</strong>", "<p>Identity by state (IBS), Identity by descent (IBD), relative finder, maternal and paternal lineages, neanderthal interbreeding, and human/chimp evolution. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_11_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Lesson 12: The immortal genome (putting genetics to work)</strong>", "<p>Personal decisions, legal questions, professional options, and the future of genetics. Check out the\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Lesson_12_Concept_Map.pdf\">concept map</a>\u00a0for this lesson.</p>", "<strong>Bonus Lesson: Discovering DNA in your Kitchen</strong>", "<p>Using only normal household items, even YOU can extract DNA and see it live and in person. At the end of this lesson you'll have the best new party trick EVER. (just remember to bring strawberries)\u00a0<a href=\"http://content.udacity-data.com/course/bio110/Kitchen_DNA_Extraction_from_Strawberries.pdf\">Here</a>\u00a0is the protocol/procedure to make it happen.</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>No previous experience in genetics is necessary. However, familiarity with basic biological concepts, like the cell, is beneficial.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Matthew Cook"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>In this class, you will learn basic skills and concepts of computer programming in an object-oriented approach using Java.</p>", "<p>You will learn concepts like classes, methods and argument passing, loops, and general problem solving ability that will become building blocks to your programming skills.</p>"],
    "name": ["Introduction to Programming in Java"],
    "url": ["https://www.udacity.com/course/cs046"],
    "school": ["San Jose State University"],
    "syllabus": ["<strong>Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment</strong>", "<strong>Lesson 2: Introduction to Classes and Objects</strong>", "<strong>Lesson 3: Graphics</strong>", "<strong>Lesson 4: Fundamental Data Types</strong>", "<strong>Lesson 5: Decisions</strong>", "<strong>Lesson 6: Iterations</strong>", "<strong>Lesson 7: Arrays, ArrayLists and Simple Array Algorithms</strong>", "<strong>Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)</strong>", "<strong>Lesson 9: Inheritance</strong>"],
    "length": ["10 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>No prior programming experience and knowledge is assumed or needed.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Cay Horstmann"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<p>Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.</p>"],
    "name": ["Introduction to Psychology"],
    "url": ["https://www.udacity.com/course/ps001"],
    "school": ["San Jose State University"],
    "syllabus": ["<p>Lesson 1: Introduction to Psychology</p>", "<p>Lesson 2: Research Methods in Psychology</p>", "<p>Lesson 3: The Biology of Behavior</p>", "<p>Lesson 4: Sensation and Perception</p>", "<p>Lesson 5: Human Development</p>", "<p>Lesson 6: Consciousness</p>", "<p>Lesson 7: Learning</p>", "<p>Lesson 8: Memory</p>", "<p>Lesson 9: Language and Thought</p>", "<p>Lesson 10: Intelligence</p>", "<p>Lesson 11: Motivation and Emotion</p>", "<p>Lesson 12: Stress and Health</p>", "<p>Lesson 13: Personality</p>", "<p>Lesson 14: Social Behavior</p>", "<p>Lesson 15: Psychological Disorders</p>", "<p>Lesson 16: Treatments for Psychological Disorders</p>"],
    "length": ["16 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>There are no prerequisites, but we encourage curiosity about human nature.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Susan Snycerski and Greg Feist"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>The Apache\u2122 Hadoop\u00ae project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<ul>\r\n<li>How Hadoop fits into the world (recognize the problems it solves)</li>\r\n<li>Understand the concepts of HDFS and MapReduce (find out how it solves the problems)</li>\r\n<li>Write MapReduce programs (see how we solve the problems)</li>\r\n<li>Practice solving problems on your own</li>\r\n</ul>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Lesson 1 does not have technical prerequisites and is a good overview of Hadoop and MapReduce for managers.</p>\r\n<p>To get the most out of the class you however need basic programming skills in Python, on a level provided by introductory courses, like our Introduction to Computer Science.</p>\r\n<p>To learn more about Hadoop, you can also check out the book\u00a0<a href=\"http://www.amazon.com/gp/product/1449311520/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449311520&amp;linkCode=as2&amp;tag=udacity-20\" target=\"_blank\">Hadoop: The Definitive Guide</a>.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>", "<strong>What Will I Learn?</strong>", "<strong>Projects</strong>", "<div>\r\n<p>Use MapReduce to reveal surprising trends in Udacity forum data.</p>\r\n</div>"],
    "name": ["Introduction to Hadoop and MapReduce"],
    "url": ["https://www.udacity.com/course/ud617"],
    "school": ["Cloudera"],
    "syllabus": ["<strong>Lesson 1</strong>", "<p>What is 'big data'? The dimensions of Big Data. Scaling problems. HDFS and Hadoop ecosystem.</p>", "<strong>Lesson 2</strong>", "<p>The Basics of HDFS, MapReduce and Hadoop cluster.</p>", "<strong>Lesson 3</strong>", "<p>Writing a MapReduce program to answer questions about data.</p>", "<strong>Lesson 4</strong>", "<p>MapReduce design patterns.</p>", "<strong>Final Project</strong>", "<p>Answering questions about big sales data and analyzing large website logs.</p>"],
    "length": ["4 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Lesson 1 does not have technical prerequisites and is a good overview of Hadoop and MapReduce for managers.</p>", "<p>To get the most out of the class you however need basic programming skills in Python, on a level provided by introductory courses, like our Introduction to Computer Science.</p>", "<p>To learn more about Hadoop, you can also check out the book\u00a0<a href=\"http://www.amazon.com/gp/product/1449311520/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1449311520&amp;linkCode=as2&amp;tag=udacity-20\" target=\"_blank\">Hadoop: The Definitive Guide</a>.</p>", "<p>Use MapReduce to reveal surprising trends in Udacity forum data.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Ian Wrigley and Sarah Sproehnle"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.</p>\r\n<p>You will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Knowing how to program in some language is all you\u2019ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.</p>\r\n<p>To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL\u00a0technology. An up to date version of Chrome or Firefox will work (see our\u00a0<a href=\"https://www.udacity.com/tech-requirements\">FAQ</a>\u00a0for more information). You can test if your browser supports this technology by visiting the\u00a0<a href=\"http://get.webgl.org/\">WebGL project homepage</a>.</p>\r\n<p>Almost all programming will be done in JavaScript using\u00a0<a href=\"http://en.wikipedia.org/wiki/Threejs\">three.js library/API</a>.</p>\r\n<p><br>About Autodesk</p>\r\n<p>This course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.\u00a0<a href=\"http://www.autodesk.com/\" target=\"_blank\">http://www.autodesk.com</a></p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Interactive 3D Graphics"],
    "url": ["http://www.udacity.com/overview/Course/cs291/CourseRev/1"],
    "school": ["Autodesk"],
    "syllabus": ["<strong>Lesson 1: Introduction</strong>", "<p>Motivation and a trip down the graphics pipeline, laying out the fundamental processes</p>", "<strong>Lesson 2: Points, Vectors, and Meshes</strong>", "<p>The basics of 3D geometry definition</p>", "<strong>Lesson 3: Colors and Materials</strong>", "<p>Color representation, material computations, transparency</p>", "<strong>Lesson 4: Transforms</strong>", "<p>Translation, scale, rotate and how to properly combine all these</p>", "<strong>Lesson 5: Matrices</strong>", "<p>Transform representation and how to fully control these</p>", "<strong>Lesson 6: Lights</strong>", "<p>Directional and point light sources</p>", "<strong>Lesson 7: Cameras</strong>", "<p>How the camera is defined</p>", "<strong>Lesson 8: Textures and Reflections</strong>", "<p>Color and opacity textures, along with reflection and normal mapping</p>", "<strong>Lesson 9: Shader Programming</strong>", "<p>An introduction to programming vertex and pixel shaders</p>", "<strong>Lesson 10: Interaction and Animation</strong>", "<p>How to select and make objects move</p>"],
    "length": ["10 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Knowing how to program in some language is all you\u2019ll need to get started. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.</p>", "<p>To be able to see the interactive demos and do programming assignments you need a browser that supportsWebGL\u00a0technology. An up to date version of Chrome or Firefox will work (see our\u00a0<a href=\"https://www.udacity.com/tech-requirements\">FAQ</a>\u00a0for more information). You can test if your browser supports this technology by visiting the\u00a0<a href=\"http://get.webgl.org/\">WebGL project homepage</a>.</p>", "<p>Almost all programming will be done in JavaScript using\u00a0<a href=\"http://en.wikipedia.org/wiki/Threejs\">three.js library/API</a>.</p>", "<p><br>About Autodesk</p>", "<p>This course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.\u00a0<a href=\"http://www.autodesk.com/\" target=\"_blank\">http://www.autodesk.com</a></p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Eric Haines"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>At the end of this course, you'll understand how to develop an HTML5 game. You will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Knowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["HTML5 Game Development"],
    "url": ["http://www.udacity.com/overview/Course/cs255/CourseRev/1"],
    "school": ["Google"],
    "syllabus": ["<strong>Lesson 0</strong>", "<p>Optional HTML/Javascript crash course</p>", "<strong>Lesson 1</strong>", "<p>Introduction to Canvas rendering</p>", "<strong>Lesson 2</strong>", "<p>Atlases</p>", "<strong>Lesson 3</strong>", "<p>Map rendering</p>", "<strong>Lesson 4</strong>", "<p>Basic Input, handling events</p>", "<strong>Lesson 5</strong>", "<p>The entity hierarchy</p>", "<strong>Lesson 6</strong>", "<p>Box2D, and using external libraries</p>", "<strong>Lesson 7</strong>", "<p>Adding sound</p>", "<strong>Lesson 8</strong>", "<p>Asynchronous Loading</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Knowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Colt McAnlis and Peter Lubbers"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured. In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will teach you how to think like a verification engineer. It will show the software development aspects you need to know to ensure chips are working as expected. You will learn how to implement verification environments.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Programming experience including object-oriented programming. Data &amp; Control structure.\u00a0<br><br><br>This course is developed by Cadence Design Systems, a global leader in electronic design automation.<a href=\"http://www.cadence.com/solutions/ev/Pages/default.aspx\" target=\"_blank\">Cadence\u00ae software</a>, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Functional Hardware Verification"],
    "url": ["http://www.udacity.com/overview/Course/cs348/CourseRev/1"],
    "school": ["Cadence"],
    "syllabus": ["<p>Lesson 1:\u00a0Introduction to Hardware Verification</p>", "<p>Lesson 2:\u00a0Basic stimulus modeling and generation</p>", "<p>Lesson 3:\u00a0Interfacing to the Hardware Model</p>", "<p>Lesson 4:\u00a0Monitoring and Functional Coverage</p>", "<p>Lesson 5:\u00a0Checking</p>", "<p>Lesson 6:\u00a0Aspect Oriented Programming</p>", "<p>Lesson 7:\u00a0Reuse Methodology</p>", "<p>Lesson 8:\u00a0Debugging</p>", "<p>Lesson 9:\u00a0Conclusion and Exam</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Programming experience including object-oriented programming. Data &amp; Control structure.\u00a0<br><br><br>This course is developed by Cadence Design Systems, a global leader in electronic design automation.<a href=\"http://www.cadence.com/solutions/ev/Pages/default.aspx\" target=\"_blank\">Cadence\u00ae software</a>, hardware, IP, and services help customers around the world to overcome a range of technical and economic hurdles.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Axel Scherer and Hannes Fr\u00f6hlich"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.</p>\r\n<p>Why It\u2019s Important to Think Parallel</p>\r\n<p><a href=\"http://www.youtube.com/watch?v=3DbAB2ChDBw\">Third Pillar of Science</a>\u00a0<br>Learn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>We expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Intro to Parallel Programming"],
    "url": ["http://www.udacity.com/overview/Course/cs344/CourseRev/1"],
    "school": ["Nvidia", "University of California, Davis"],
    "syllabus": ["<strong>Lesson 1: GPU Programming Model</strong>", "<p>Project 1: Greyscale Conversion (for that classy touch!)</p>", "<strong>Lesson 2: GPU Hardware and Parallel Communication</strong>", "<p>Project 2: Smart Blurring (miracle product for removing wrinkles!)</p>", "<strong>Lesson 3: Fundamental Parallel Algorithms</strong>", "<p>Project 3: HDR Tonemapping (when 1000:1 contrast is not enough!)</p>", "<strong>Lesson 4: Using Sort and Scan</strong>", "<p>Project 4: Red Eye Removal (soothing relief for bright red eyes)</p>", "<strong>Lesson 5: Optimizing GPU Programs</strong>", "<p>Project 5: Accelerating Histograms (when fast isn't fast enough)</p>", "<strong>Lesson 6: Parallel Computing Patterns</strong>", "<p>Project 6: Seamless Image Compositing (polar bear in the swimming pool)</p>", "<strong>Lesson 7: The Frontiers and Future of GPU Computing</strong>"],
    "length": ["12 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>We expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["John Owens and David Luebke"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Throughout this course, we will use algebra to quantify and describe the world around us. Have you ever wondered how many songs can fit onto your flash drive? By the end of the course, you\u2019ll have stronger skills for modeling problems, analyzing patterns, and using algebra to arrive at conclusions.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Understand and develop the language, models, and tools for math reasoning.</p>\r\n<p>Reason with numbers and units to solve problems.</p>\r\n<p>Identify, analyze, extend, and create patterns and functions.</p>\r\n<p>Make connections about relations and functions through multiple representations: graphs, charts, tables, equations.</p>\r\n<p>Apply mathematical reasoning and logic to solve equations and write equivalent forms.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Almost nothing! Students should know their multiplication tables (1-12) and be proficient with adding and subtracting integers (for example, -7 - 16). A pencil and paper will be a student\u2019s best aid rather than a calculator.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Visualizing Algebra"],
    "url": ["http://www.udacity.com/overview/Course/ma006/CourseRev/1"],
    "school": ["San Jose State University"],
    "syllabus": ["<p>Unit 1 - Review of Foundations</p>", "<p>Unit 2 - Equations and Inequalities</p>", "<p>Unit 3 - Graphs of Linear Equations</p>", "<p>Unit 4 - Systems of Equations</p>", "<p>Unit 5 - Exponents and Polynomials</p>", "<p>Unit 6 - Factoring</p>", "<p>Unit 7 - Rational Expressions</p>", "<p>Unit 8 - Rational Exponents and Radicals</p>", "<p>Unit 9 - Solving Quadratic Equations</p>", "<p>Unit 10 - Quadratic Equations and Applications</p>", "<p>Unit 11 - Conic Sections</p>", "<p>Unit 12 - Inverses, Exponentials, and Logarithms</p>"],
    "length": ["16 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Almost nothing! Students should know their multiplication tables (1-12) and be proficient with adding and subtracting integers (for example, -7 - 16). A pencil and paper will be a student\u2019s best aid rather than a calculator.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Susan McClory, Sandra DeSousa and Chris Saden"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>We live in a time of unprecedented access to information...data. Whether researching the best school, job, or relationship, the Internet has thrown open the doors to vast pools of data. Statistics are simply objective and systematic methods for describing and interpreting information so that you may make the most informed decisions about life.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<ul>\r\n<li>The applications of statistics to everyday life</li>\r\n<li>Methods for acquiring data through observation and experimentation</li>\r\n<li>To organize and describe quantitative and categorical forms of data</li>\r\n<li>Anticipating patterns using basic probability and sampling</li>\r\n<li>Statistical inference through estimation and hypothesis testing</li>\r\n<li>Correlation and simple regression</li>\r\n<li>Ways of describing the strength of relationships between variables</li>\r\n</ul>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>It sounds strange to say, but math is not the focus of this class. To do well, however, it is necessary to have a basic understanding of proportions (fractions, decimals, and percentages), negative numbers, basic algebra (solving equations), and exponents and square roots.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Statistics"],
    "url": ["http://www.udacity.com/overview/Course/st095/CourseRev/1"],
    "school": ["San Jose State University"],
    "syllabus": ["<strong>Module 1: Introduction to Statistics and Methods</strong>", "<ul>\r\n<li>Lesson 1: Intro to statistical research methods</li>\r\n<li>Lesson 2: Frequency Distributions &amp; Visualizing data</li>\r\n</ul>", "<strong>Module 2: Describing Data</strong>", "<ul>\r\n<li>Lesson 3: Central Tendency</li>\r\n<li>Lesson 4: Variability</li>\r\n<li>Midterm 1 on Lessons 1-4</li>\r\n</ul>", "<strong>Module 3: Normal Distribution Analysis</strong>", "<ul>\r\n<li>Lesson 5: Standardized Scores (z-scores)</li>\r\n<li>Lesson 6: Probability and the Normal Distribution</li>\r\n<li>Lesson 7: Sampling Distributions</li>\r\n</ul>", "<strong>Module 4: Foundations of Inferential Statistics</strong>", "<ul>\r\n<li>Lesson 8: Estimation</li>\r\n<li>Lesson 9: Hypothesis Testing</li>\r\n</ul>", "<p>Midterm 2 on Lessons 5-9</p>", "<strong>Module 5: Comparing Means</strong>", "<ul>\r\n<li>Lesson 10-11: t-tests</li>\r\n<li>Lesson 12-13: One-way ANOVA</li>\r\n</ul>", "<strong>Module 6: Correlation, Regression, and Non-Parametrics</strong>", "<ul>\r\n<li>Lesson 14: Correlation</li>\r\n<li>Lesson 15: Regression (available soon)</li>\r\n<li>Lesson 16: Chi-Squared Tests (available soon)</li>\r\n</ul>", "<p>Final Exam on Lessons 10-16 (available soon)</p>"],
    "length": [],
    "prereqs": ["<p>It sounds strange to say, but math is not the focus of this class. To do well, however, it is necessary to have a basic understanding of proportions (fractions, decimals, and percentages), negative numbers, basic algebra (solving equations), and exponents and square roots.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sean Laraway, Ronald Rogers and Katie Kormanik"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Math is everywhere. In this class, you\u2019ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life. The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you\u2019ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>In this course, you will learn...</p>\r\n<ul>\r\n<li>To translate word problems into mathematical expressions or equations</li>\r\n<li>To manipulate algebraic expressions and solve equations</li>\r\n<li>To graph different types of functions and to understand the relationship between a function\u2019s graph and its equation</li>\r\n<li>To model growth and decay</li>\r\n</ul>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Basic arithmetic - addition, subtraction, multiplication and division of positive and negative numbers.\u00a0</p>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>"],
    "name": ["College Algebra"],
    "url": ["http://www.udacity.com/overview/Course/ma008/CourseRev/1"],
    "school": ["San Jose State University"],
    "syllabus": ["<p>The following topics will be covered. There will be two midterms and one final exam. There are no deadlines unless you are in the SJSU Plus-Udacity for-credit program.</p>", "<p>Lesson 1: Number\u00a0<br>Lesson 2: Expressions\u00a0<br>Lesson 3: Polynomials\u00a0<br>Lesson 4: Equations\u00a0<br>Lesson 5-1: Coordinates\u00a0<br>Lesson 5-2: Distance\u00a0<br>Lesson 5-3: Midpoints And Slope\u00a0<br>Lesson 6-1: Slope And Equations\u00a0<br>Lesson 6-2: Points\u00a0<br>Lesson 7: Forms of the Equation of a Line\u00a0<br>Lesson 8: Inequalities And Absolute Value\u00a0<br>Lesson 9: More Inequalities And Equations\u00a0<br>Lesson 10: Parabolas\u00a0<br>Lesson 11: Factoring\u00a0<br>Lesson 12: Quadratic and Rational Inequalities\u00a0<br>Lesson 13: More Parabolas\u00a0<br>Lesson 14: Completing the Square\u00a0<br>Lesson 15: Quadratic Formula\u00a0<br>Lesson 16: Complex Numbers\u00a0<br>Lesson 17: Functions\u00a0<br>Lesson 18: Domain and Range\u00a0<br>Lesson 19: Behavior of Functions\u00a0<br>Lesson 20: Factor Theorem\u00a0<br>Lesson 21: Rational Zero Test\u00a0<br>Lesson 22: Intermediate Value Theorem\u00a0<br>Lesson 24: Asymptotes\u00a0<br>Lesson 25: Slant Asymptotes\u00a0<br>Lesson 26: Transformations\u00a0<br>Lesson 29: Exponential Functions\u00a0<br>Lesson 30: Scientific Notation\u00a0<br>Lesson 31: Logarithmic Functions\u00a0<br>Lesson 32: Log Properties\u00a0<br>Lesson 33: Solving Exponential and Logarithmic Equations\u00a0<br>Lesson 34: Population, Scrolls and Sound</p>"],
    "length": ["16 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Basic arithmetic - addition, subtraction, multiplication and division of positive and negative numbers.\u00a0</p>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Julie Sliva Spitzer and Miriam Swords Kalk"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>The objective of this class is to teach you modern AI. You will learn about the basic techniques and tricks of the trade. We also aspire to excite you about the field of AI.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This class introduces students to the basics of Artificial Intelligence, which includes machine learning, probabilistic reasoning, robotics, and natural language processing.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that at our ST101: Introduction to Statistics class</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Introduction to Artificial Intelligence"],
    "url": ["http://www.udacity.com/overview/Course/cs271/CourseRev/1"],
    "school": ["Stanford University"],
    "syllabus": ["<p>Overview of AI</p>", "<p>Statistics, Uncertainty, and Bayes networks</p>", "<p>Machine Learning</p>", "<p>Logic and Planning</p>", "<p>Markov Decision Processes and Reinforcement Learning</p>", "<p>Hidden Markov Models and Filters</p>", "<p>Adversarial and Advanced Planning</p>", "<p>Image Processing and Computer Vision</p>", "<p>Robotics and robot motion planning</p>", "<p>Natural Language Processing and Information Retrieval</p>"],
    "length": ["10 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that at our ST101: Introduction to Statistics class</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sebastian Thrun and Peter Norvig"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>At the end of this course, you will have a solid understanding of theoretical computer science. This will not only allow you to recognize some of the most challenging algorithmic problems out there, but also give you powerful tools to deal with them in practice.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>You should have a basic understanding of algorithms (such as\u00a0<a href=\"https://www.udacity.com/course/cs215\">CS215</a>) and programming (such as\u00a0<a href=\"https://www.udacity.com/course/cs101\">CS101</a>). No prior knowledge about theoretical computer science required!</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Intro to Theoretical Computer Science"],
    "url": ["http://www.udacity.com/overview/Course/cs313/CourseRev/1"],
    "school": [],
    "syllabus": ["<strong>Lesson 1: Challenging Problems</strong>", "<p>An introduction to tough problems and their analysis</p>", "<strong>Lesson 2: Understanding Hardness</strong>", "<p>What we mean when a problem is \u201chard\u201d and the concept of NP-completeness</p>", "<strong>Lesson 3: Showing Hardness</strong>", "<p>Tools to let you recognize and prove that a problem is hard</p>", "<strong>Lesson 4: Intelligent Force</strong>", "<p>Smart techniques to solve problems that should \u2013 theoretically \u2013 be impossible to solve</p>", "<strong>Lesson 5: Sloppy Solutions</strong>", "<p>Gaining speed by accepting approximate solutions</p>", "<strong>Lesson 6: Poking Around</strong>", "<p>Why randomness can be of help \u2013 sometimes. An introduction to complexity classes.</p>", "<strong>Lesson 7: Ultimate Limits</strong>", "<p>Problems that no computer can ever solve. In theory.</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>You should have a basic understanding of algorithms (such as\u00a0<a href=\"https://www.udacity.com/course/cs215\">CS215</a>) and programming (such as\u00a0<a href=\"https://www.udacity.com/course/cs101\">CS101</a>). No prior knowledge about theoretical computer science required!</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sebastian Wernicke"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Learn the key tools and steps to build a successful startup (or at least reduce the risk of failure). An introduction to the basics of Steve Blank's famous Customer Development process, where entrepreneurs \"get out of the building\" to gather massive amounts of customer and marketplace feedback, and then use that feedback to continuously iterate and evolve their startup business models, improving the chances of success at every step.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>You'll learn the key steps of the Customer Development process: how to identify and engage the first customers for your product, and how to gather, evaluate and use their feedback to make your product, marketing and business model far stronger.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Prior knowledge or experience are not required. Passion, tenacity, and a willingness to work hard are essential. Ideally, you'll join the class with at least a rough idea of the business model of the startup you'll work on step-by-step through the course of the class.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["How to Build a Startup"],
    "url": ["http://www.udacity.com/overview/Course/ep245/CourseRev/1"],
    "school": [],
    "syllabus": ["<strong>Lesson 1: What We Now Know</strong>", "<p>Why startups are not smaller versions of large companies</p>", "<strong>Lessons 1.5A and 1.5B: Business Models and Customer Development</strong>", "<p>How to articulate and test hypotheses</p>", "<strong>Lesson 2: Value Proposition</strong>", "<p>How do you find your minimum viable product?</p>", "<strong>Lesson 3: Customer Segments</strong>", "<p>How do you find your customer archetype?</p>", "<strong>Lesson 4: Channels</strong>", "<p>How does your product gets to customers?</p>", "<strong>Lesson 5: Customer Relationships</strong>", "<p>How do you get, keep and grow customers?</p>", "<strong>Lesson 6: Revenue Models</strong>", "<p>How do you make your money?</p>", "<strong>Lesson 7: Partners</strong>", "<p>Who are your partners and suppliers?</p>", "<strong>Lesson 8: Resources, Activities and Costs</strong>", "<p>What is most important for the business?</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Prior knowledge or experience are not required. Passion, tenacity, and a willingness to work hard are essential. Ideally, you'll join the class with at least a rough idea of the business model of the startup you'll work on step-by-step through the course of the class.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Steve Blank"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>In this course you will examine real world problems -- rescue the Apollo 13 astronauts, stop the spread of epidemics, and fight forest fires -- involving differential equations and figure out how to solve them using numerical methods.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>By the end of this course, you'll develop an intuition for the use of differential equations in the applied sciences. You'll also learn how to build mathematical models for systems of differential equations. Along the way, you'll learn how to translate mathematical expressions into Python code, and solve some really cool problems!</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>You'll need a basic knowledge of programming for this course, around the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012\">CS 101</a>\u00a0or equivalent. You'll also need to understand trigonometry at the high school level, as well as basic vector algebra. This class will primarily involve solving equations numerically rather than analytically, but some exposure to<a href=\"http://www.khanacademy.org/math/calculus/\">calculus</a>\u00a0and physics at the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/pstrong00/CourseRev/1\">PH 100</a>\u00a0wouldn't hurt.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Differential Equations in Action"],
    "url": ["http://www.udacity.com/overview/Course/cs222/CourseRev/1"],
    "school": [],
    "syllabus": ["<strong>Lesson 1: Rescuing Apollo 13, Part 1</strong>", "<p>Introduction to the Forward Euler Method</p>", "<strong>Lesson 2: Rescuing Apollo 13, Part 2</strong>", "<p>Comparing solvers, Heun\u2019s Method and Symplectic Euler Method</p>", "<strong>Lesson 3: Analyzing the Spread of Diseases</strong>", "<p>Implicit methods and stiffness</p>", "<strong>Lesson 4: There\u2019s Plenty of Fish in the Sea?</strong>", "<p>Stability, sensitivity, and optimization</p>", "<strong>Lesson 5: Antilock Brake Systems</strong>", "<p>Friction, equilibria, and control theory</p>", "<strong>Lesson 6: The Path of a Forest Fire</strong>", "<p>Partial differential equations and heat conduction</p>", "<strong>Lesson 7: Advanced Applications of Numerical Methods</strong>", "<p>Chaos, software, and predictive capability</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>You'll need a basic knowledge of programming for this course, around the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012\">CS 101</a>\u00a0or equivalent. You'll also need to understand trigonometry at the high school level, as well as basic vector algebra. This class will primarily involve solving equations numerically rather than analytically, but some exposure to<a href=\"http://www.khanacademy.org/math/calculus/\">calculus</a>\u00a0and physics at the level of\u00a0<a href=\"http://www.udacity.com/overview/Course/pstrong00/CourseRev/1\">PH 100</a>\u00a0wouldn't hurt.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["J\u00f6rn Loviscach"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>At the end of this course you will have a solid understanding about systematic debugging, will know how to automate debugging and will have built several functional debugging tools in Python.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Basic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Software Debugging"],
    "url": ["http://www.udacity.com/overview/Course/cs259/CourseRev/1"],
    "school": ["Saarland University"],
    "syllabus": ["<strong>Lesson 1: How Debuggers work</strong>", "<p>Theory: Scientific method and its application to debugging.\u00a0<br>Fun fact: First bug in the history of computer science.\u00a0<br>Practice: Building a simple tracer.</p>", "<strong>Lesson 2: Asserting Expectations</strong>", "<p>Theory: Assertions in testing and in debugging.\u00a0<br>Fun fact: The most expensive bug in history.\u00a0<br>Practice: Improving the tracer.</p>", "<strong>Lesson 3: Simplifying Failures</strong>", "<p>Theory: Strategy of simplifying failures. Binary search. Delta debugging principle.\u00a0<br>Fun fact: Mozilla bugathon.\u00a0<br>Practice: Building a delta debugger.</p>", "<strong>Lesson 4: Tracking Origins</strong>", "<p>Theory: Cause-effect chain. Deduction. Dependencies. Slices.\u00a0<br>Fun fact: Sherlock Holmes and Doctor Watson.\u00a0<br>Practice: Improving the delta debugger.</p>", "<strong>Lesson 5: Reproducing Failures</strong>", "<p>Theory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug). Systematic reproduction process.\u00a0<br>Fun fact: Mad laptop bug.\u00a0<br>Practice: Building a statistic debugging tool.</p>", "<strong>Lesson 6: Learning from Mistakes</strong>", "<p>Theory: Bug database management. Classifying bugs. Bug maps. Learning from mistakes.\u00a0<br>Fun fact: Programmer with the most buggy code.\u00a0<br>Practice: Improving your tools and practicing on a real world bug database.</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Basic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Andreas Zeller"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will teach you how to think like a software tester, how to find bugs in code earlier, and write better code.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Programming experience is required.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Software Testing"],
    "url": ["http://www.udacity.com/overview/Course/cs258/CourseRev/1"],
    "school": ["University of Utah"],
    "syllabus": ["<strong>Lesson 1: Domains, Ranges, Oracles, and Kinds of Testing</strong>", "<p>How to think about the different elements of software testing</p>", "<strong>Lesson 2: Code Coverage</strong>", "<p>How to find parts of a program that need more testing</p>", "<strong>Lesson 3: Random Testing</strong>", "<p>How to automatically generate test cases that break code in unexpected ways</p>", "<strong>Lesson 4: Advanced Random Testing</strong>", "<p>How to engineer a sophisticated random test case generator</p>", "<strong>Lesson 5: Consequences</strong>", "<p>How to deal with lots of bugs, how to take a big input that triggers a bug and make it smaller, how to report a bug, and more!</p>", "<strong>Lesson 6: Conclusion</strong>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Programming experience is required.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["John Regehr"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will cover visualization, probability, regression and other topics that will help you learn the basic methods of understanding data with statistics.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course does not require any previous knowledge of statistics. Basic familiarity with algebra such as knowing how to compute the mean, median and mode of a set of numbers will be helpful.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Introduction to Statistics"],
    "url": ["http://www.udacity.com/overview/Course/st101/CourseRev/1"],
    "school": ["Stanford University"],
    "syllabus": ["<strong>Lesson 1: Visualizing relationships in data</strong>", "<p>Seeing relationships in data and predicting based on them; Simpson's paradox</p>", "<strong>Lesson 2: Probability</strong>", "<p>Probability; Bayes Rule; Correlation vs. Causation</p>", "<strong>Lesson 3: Estimation</strong>", "<p>Maximum Likelihood Estimation; Mean, Median, Mode; Standard Deviation, Variance</p>", "<strong>Lesson 4: Outliers and Normal Distribution</strong>", "<p>Outliers, Quartiles; Binomial Distribution; Central Limit Theorem; Manipulating Normal Distribution</p>", "<strong>Lesson 5: Inference</strong>", "<p>Confidence intervals; Hypothesis Testing</p>", "<strong>Lesson 6: Regression</strong>", "<p>Linear regression; correlation</p>", "<strong>Lesson 7: Final Exam</strong>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course does not require any previous knowledge of statistics. Basic familiarity with algebra such as knowing how to compute the mean, median and mode of a set of numbers will be helpful.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sebastian Thrun"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>By the end of this class you will understand key concepts needed to devise new algorithms for graphs and other important data structures and to evaluate the efficiency of these algorithms.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Algorithms"],
    "url": ["http://www.udacity.com/overview/Course/cs215/CourseRev/1"],
    "school": [],
    "syllabus": ["<strong>Lesson 1: A Social Network Magic Trick</strong>", "<p>Becoming familiar with algorithm analysis</p>", "<strong>Lesson 2: Growth Rates in Social Networks</strong>", "<p>Using mathematical tools to analyze how things are connected</p>", "<strong>Lesson 3: Basic Graph Algorithms</strong>", "<p>Finding the quickest route to Kevin Bacon</p>", "<strong>Lesson 4: It\u2019s Who You Know</strong>", "<p>Keeping track of your best friends using heaps</p>", "<strong>Lesson 5: Strong and Weak Bonds</strong>", "<p>Working with social networks with edge weights.</p>", "<strong>Lesson 6: Hardness of Network Problems</strong>", "<p>Exploring what it means for a social network problem to be harder than other.</p>", "<strong>Lesson 7: Conclusion</strong>", "<p>Using your knowledge</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Michael Littman"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This unique class gives you the chance to see the sites where physics history was made and learn some of the subject's most captivating concepts.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course is suitable for anyone; a basic understanding of algebra is suggested.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Introduction to Physics"],
    "url": ["http://www.udacity.com/overview/Course/ph100/CourseRev/1"],
    "school": [],
    "syllabus": ["<strong>Lesson 1: How can we measure the circumference of the Earth?</strong>", "<p>Basics of geometry and trigonometry</p>", "<strong>Lesson 2: How do objects move?</strong>", "<p>Data analysis and kinematics</p>", "<strong>Lesson 3: What causes motion?</strong>", "<p>Forces, acceleration, and Newton\u2019s Laws</p>", "<strong>Lesson 4: How can we use motion?</strong>", "<p>Work, energy, and simple machines</p>", "<strong>Lesson 5: How can we determine our longitude at sea?</strong>", "<p>Simple harmonic motion</p>", "<strong>Lesson 6: What is electricity?</strong>", "<p>Charge and electric fields</p>", "<strong>Lesson 7: What is left to discover?</strong>", "<p>Modern physics and open questions</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course is suitable for anyone; a basic understanding of algebra is suggested.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Andy Brown"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Explore how secrets are written and shared, as well as what can go wrong when cryptography is misused or implemented badly.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["CS387 - Applied Cryptography"],
    "url": ["http://www.udacity.com/overview/Course/cs387"],
    "school": ["University of Virginia"],
    "syllabus": ["<p><strong>Lesson 1: Perfect Ciphers</strong></p>", "<p>What makes certain ciphers perfect, how the Lorenz Cipher was broken</p>", "<p><strong>Lesson 2: Symmetric Encryption</strong></p>", "<p>Sending messages when two people share a secret</p>", "<p><strong>Lesson 3: Key Exchange</strong></p>", "<p>Technics to establish a shared secret</p>", "<p><strong>Lesson 4: Asymmetric Encryption</strong></p>", "<p>Exchanging information using public key cryptosystems</p>", "<p><strong>Lesson 5: Public Key Protocols</strong></p>", "<p>Encrypted key exchange, certificates, secure commerce</p>", "<p><strong>Lesson 6: Using Cryptographic Primitives</strong></p>", "<p>How cryptography can be useful for anonymizing communication, voting, and digital cash</p>", "<p><strong>Lesson 7: Secure Computation</strong></p>", "<p>Computing without exposing data</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["David Evans"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.</p>\r\n<p>This course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>This course will teach you probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics.</p>\r\n<p>At the end of the course, you will leverage what you learned by solving the problem of a runaway robot that you must chase and hunt down!</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>Success in this course requires some programming experience and some mathematical fluency.</p>\r\n<p>Programming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don\u2019t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity\u2019s\u00a0<a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Introduction to Computer Science</a>\u00a0course before attempting this one.</p>\r\n<p>The math used will be centered on probability and linear algebra. You don\u2019t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes\u2019 rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Artificial Intelligence for Robotics"],
    "url": ["http://www.udacity.com/overview/Course/cs373"],
    "school": ["Stanford University"],
    "syllabus": ["<strong>Lesson 1: Localization</strong>", "<ul>\r\n<li>Localization</li>\r\n<li>Total Probability</li>\r\n<li>Uniform Distribution</li>\r\n<li>Probability After Sense</li>\r\n<li>Normalize Distribution</li>\r\n<li>Phit and Pmiss</li>\r\n<li>Sum of Probabilities</li>\r\n<li>Sense Function</li>\r\n<li>Exact Motion</li>\r\n<li>Move Function</li>\r\n<li>Bayes Rule</li>\r\n<li>Theorem of Total Probability</li>\r\n</ul>", "<strong>Lesson 2: Kalman Filters</strong>", "<ul>\r\n<li>Gaussian Intro</li>\r\n<li>Variance Comparison</li>\r\n<li>Maximize Gaussian</li>\r\n<li>Measurement and Motion</li>\r\n<li>Parameter Update</li>\r\n<li>New Mean Variance</li>\r\n<li>Gaussian Motion</li>\r\n<li>Kalman Filter Code</li>\r\n<li>Kalman Prediction</li>\r\n<li>Kalman Filter Design</li>\r\n<li>Kalman Matrices</li>\r\n</ul>", "<strong>Lesson 3: Particle Filters</strong>", "<ul>\r\n<li>Slate Space</li>\r\n<li>Belief Modality</li>\r\n<li>Particle Filters</li>\r\n<li>Using Robot Class</li>\r\n<li>Robot World</li>\r\n<li>Robot Particles</li>\r\n</ul>", "<strong>Lesson 4: Search</strong>", "<ul>\r\n<li>Motion Planning</li>\r\n<li>Compute Cost</li>\r\n<li>Optimal Path</li>\r\n<li>First Search Program</li>\r\n<li>Expansion Grid</li>\r\n<li>Dynamic Programming</li>\r\n<li>Computing Value</li>\r\n<li>Optimal Policy</li>\r\n</ul>", "<strong>Lesson 5: PID Control</strong>", "<ul>\r\n<li>Robot Motion</li>\r\n<li>Smoothing Algorithm</li>\r\n<li>Path Smoothing</li>\r\n<li>Zero Data Weight</li>\r\n<li>Pid Control</li>\r\n<li>Proportional Control</li>\r\n<li>Implement P Controller</li>\r\n<li>Oscillations</li>\r\n<li>Pd Controller</li>\r\n<li>Systematic Bias</li>\r\n<li>Pid Implementation</li>\r\n<li>Parameter Optimization</li>\r\n</ul>", "<strong>Lesson 6: SLAM (Simultaneous Localization and Mapping)</strong>", "<ul>\r\n<li>Localization</li>\r\n<li>Planning</li>\r\n<li>Segmented Ste</li>\r\n<li>Fun with Parameters</li>\r\n<li>SLAM</li>\r\n<li>Graph SLAM</li>\r\n<li>Implementing Constraints</li>\r\n<li>Adding Landmarks</li>\r\n<li>Matrix Modification</li>\r\n<li>Untouched Fields</li>\r\n<li>Landmark Position</li>\r\n<li>Confident Measurements</li>\r\n<li>Implementing SLAM</li>\r\n</ul>", "<strong>Runaway Robot Final Project</strong>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>Success in this course requires some programming experience and some mathematical fluency.</p>", "<p>Programming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don\u2019t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity\u2019s\u00a0<a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Introduction to Computer Science</a>\u00a0course before attempting this one.</p>", "<p>The math used will be centered on probability and linear algebra. You don\u2019t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes\u2019 rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sebastian Thrun"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>Starting from the basics of how the web works, this class will walk you through everything you need to know to build your own blog application and scale it to support large numbers of users.</p>\r\n</div>\r\n<strong>Why Take This Course?</strong>\r\n<div>\r\n<p>In this project-based course your knowledge will be evaluated as you learn to build your own blog application! Learn everything Steve Huffman wished he would have known when he broke into the startup world. Read more about Huffman and the course\u00a0<a href=\"http://www.udacity.blogspot.com/2012/05/steve-huffman-has-something-to-teach.html\">here.</a></p>\r\n</div>\r\n<strong>Prerequisites and Requirements</strong>\r\n<div>\r\n<p>A moderate amount of programming and computer science experience is necessary for this course.</p>\r\n</div>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div>\r\n<div>\r\n<div>\r\n<div>\r\n<strong>What Will I Learn?</strong>\r\n<strong>Projects</strong>\r\n<div>\r\n<p>Make a webpage that anyone can add to and edit.</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>"],
    "name": ["Web Development"],
    "url": ["http://www.udacity.com/overview/Course/cs253"],
    "school": [],
    "syllabus": ["<strong>How the Web Works</strong>", "<p>Introduction to HTTP and Web Applications</p>", "<strong>How to Have Users</strong>", "<p>Getting and processing user input</p>", "<strong>How to Manage State</strong>", "<p>Databases and persistent data</p>", "<strong>Whom to Trust</strong>", "<p>User authentication and access control</p>", "<strong>How to Connect</strong>", "<p>Web applications as services, using APIs</p>", "<strong>How to Serve Millions</strong>", "<p>Scaling, caching, optimizations</p>", "<strong>Changing the World</strong>", "<p>Building a successful web application, project</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>A moderate amount of programming and computer science experience is necessary for this course.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Steve Huffman"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Take this class and learn how to build your own simple web browser complete with the ability to parse and understand HTML and JavaScript.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Programming Languages"],
    "url": ["http://www.udacity.com/overview/Course/cs262"],
    "school": ["University of Virginia"],
    "syllabus": ["<strong>String Patterns</strong>", "<p>Finding and specifying classes of strings using regular expressions</p>", "<strong>Lexical Analysis</strong>", "<p>Breaking strings down into important words</p>", "<strong>Grammars</strong>", "<p>Specifying and deconstructing valid sentences</p>", "<strong>Parsing</strong>", "<p>Turning sentences into trees</p>", "<strong>Interpreting</strong>", "<p>Simulating programs</p>", "<strong>Building a Web Browser</strong>", "<p>Interpreting HTML and JavaScript</p>", "<strong>Wrap-up</strong>", "<p>Exam testing your knowledge</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Wes Weimer"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<p>Learn new concepts, patterns, and methods that will expand your programming abilities, helping move you from a novice to an expert programmer.</p>\r\n</div>", "<strong>Why Take This Course?</strong>", "<div>\r\n<p>Move along the path towards becoming an expert programmer! In this class you will practice going from a problem description to a solution, using a series of assignments.</p>\r\n</div>", "<strong>Prerequisites and Requirements</strong>", "<div>\r\n<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>\r\n</div>", "<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>"],
    "name": ["Design of Computer Programs"],
    "url": ["http://www.udacity.com/overview/Course/cs212"],
    "school": ["Stanford University"],
    "syllabus": ["<strong>Lesson 1: Winning Poker Hands</strong>", "<p>Steps of the design process; Developing for clarity and generality; Arguments for program correctness; Experimentation and simulation.; Design tradeoffs; Simplicity and Clarity. Decomposition and composability.</p>", "<strong>Lesson 2: Back of the Envelope</strong>", "<p>Back of envelope calculations; When to use brute force and when to be clever; The Zebra puzzle; Generator expressions; Permutations and combinations. Cryptarithmetic; Recursive and wishful thinking.</p>", "<strong>Lesson 3: Regular Expressions, other languages and interpreters</strong>", "<p>Defining the language of regular expressions; Interpreting the language; Defining the set of strings matched by a regular expression;\u00a0<br>Other languages.</p>", "<strong>Lesson 4: Dealing with complexity through search</strong>", "<p>Search: finding your way with a flashlight or boat; pouring water. Analyzing the efficiency of an algorithm; Recurrence relations; Matching data types with algorithms; Longest palindrome substring algorithm.</p>", "<strong>Lesson 5: Dealing with uncertainty through probability</strong>", "<p>Probability: the game of Pig; Maximizing expected utility to optimize strategy.</p>", "<strong>Lesson 6: Word Games</strong>", "<p>Managing complexity; Large sets of words; Appropriate data structures; Word games.</p>", "<strong>Lesson 7: Conclusion</strong>", "<p>Final exam/project</p>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wk"],
    "prereqs": ["<p>This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Peter Norvig"]
}, {
    "startDate": ["Self Paced"],
    "about": ["<div>\r\n<div>\r\n<div>\r\n<div>\r\n<p>In this introductory course, you\u2019ll learn and practice key computer science concepts by building your own versions of popular web applications. You\u2019ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you\u2019ll explore fundamental computer science concepts, as you build your own search engine and social network.</p>\r\n</div>\r\n<strong>Why Take This Course?</strong>\r\n<div>\r\n<p>You\u2019ll learn the programming language Python, and you\u2019ll explore foundational concepts in computer science. Most importantly, you\u2019ll start thinking like a software engineer by solving interesting problems (how to build a web crawler or a social network) using computer science.</p>\r\n<p>This course is a first step into the world of computer science, and whether you want to become a software engineer, or collaborate with software engineers, this course is for you. You\u2019ll be prepared for intermediate-level computer science courses when you\u2019ve mastered the concepts covered in this course.</p>\r\n<p>Build a Search Engine:</p>\r\n<p>Throughout this course, you\u2019ll build a search engine by learning about and producing key search engine components including a crawler, an index and a page rank algorithm. As you build these pieces, you\u2019ll be learning about and practicing computer science skills that will ready you for intermediate level computer science courses.</p>\r\n<p>Build a Social Network:</p>\r\n<p>At the end of the course we will give you a set of relationships (i.e. strings of phrases like \u201cDave likes Andy, Kathleen and Kristy\u201d) and you will use your new computer science skills to organize these relationships into a social network. With your new social network, you can explore relationships and gain insight into how you fit into your own social networks.</p>\r\n</div>\r\n<strong>Prerequisites and Requirements</strong>\r\n<div>\r\n<p>There is no prior programming knowledge needed for this course. Beginners are welcome!</p>\r\n</div>\r\n<p>See the\u00a0<a href=\"https://www.udacity.com/tech-requirements\" target=\"_blank\">Technology Requirements</a>\u00a0for using Udacity</p>\r\n</div>\r\n</div>\r\n</div>"],
    "name": ["Introduction to Computer Science"],
    "url": ["http://www.udacity.com/overview/Course/cs101"],
    "school": ["University of Virginia"],
    "syllabus": ["<strong>Lesson 1: How to Get Started</strong>", "<p>Your first program: Extracting a link</p>", "<strong>Lesson 2: How to Repeat</strong>", "<p>Procedures, decisions (if), loops; finding all of the links on a page</p>", "<strong>Additional Lesson: How to Solve Problems</strong>", "<p>Universal techniques for solving programming problems</p>", "<strong>Lesson 3: How to Manage Data</strong>", "<p>Lists; crawling the web</p>", "<strong>Lesson 4: Responding to Queries</strong>", "<p>Complex data structures; building a reverse index to do searches; networks</p>", "<strong>Lesson 5: How Programs Run</strong>", "<p>Reasoning about cost; hash tables (Dictionary)</p>", "<strong>Lesson 6: How to Have Infinite Power</strong>", "<p>Recursive definitions; ranking search results</p>", "<strong>Lesson 7: Where to Go from Here</strong>", "<p>Past, present, and future of computing; exam</p>", "<strong>Final Project: Build a Social Network</strong>"],
    "length": ["7 weeks long"],
    "effort": ["Assumes 6hr/wks"],
    "prereqs": ["<p>There is no prior programming knowledge needed for this course. Beginners are welcome!</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Sebastian Thrun and David Evans"]
}, {
    "startDate": ["Upcoming"],
    "about": ["<p>Android Fundamentals blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors, step-by-step, to build an Android app, and learn best practices of mobile development in general and Android development in particular.</p>"],
    "name": ["Developing Android Apps:  Android Fundamentals"],
    "url": ["https://www.udacity.com/course/ud853"],
    "school": ["Google"],
    "syllabus": ["<p><strong>Syllabus</strong></p>", "<div><strong>Lesson 1: Create Project Sunshine with a Simple UI (5-8 hrs)</strong>\r\n<p>Starting by installing Android Studio, you\u2019ll create your first project with a simple list-based user interface and built and deploy it to virtual and actual devices. You\u2019ll also discover what makes mobile - and Android in particular - a unique environment for app development.</p>\r\n<ul>\r\n<li>Android Studio, Gradle, and debugging tools</li>\r\n<li>User Interface and Layout managers</li>\r\n<li>ListViews and Adapters</li>\r\n</ul>\r\n<strong>Lesson 2: Connect Sunshine to the Cloud (5-8 hrs)</strong>\r\n<p>Replace the mock data with real weather data by connecting Sunshine up to an Internet back-end courtesy of the Open Weather Map API. You\u2019ll learn how to add permissions to your app, initiate network I/O, and how to move time consuming tasks like network data transfers off the main UI thread.</p>\r\n<ul>\r\n<li>Threading and ASyncTask</li>\r\n<li>HTTP requests on web APIs</li>\r\n<li>Android Permission System</li>\r\n</ul>\r\n<strong>Lesson 3: Create New Activities and Navigate Apps with Intents (8-12 hrs)</strong>\r\n<p>Give your app structure and create more complex Activities. You\u2019ll learn about Android\u2019s Intent framework, and how to use Intents to navigate between Activities, both within your app and as a way to add 3rd party functionality.</p>\r\n<ul>\r\n<li>App navigation with Explicit Intents</li>\r\n<li>Implicit Intents to incorporate 3rd-party apps</li>\r\n<li>Share Intent and the Android sharing framework</li>\r\n<li>Broadcast Intents and Broadcast Receivers</li>\r\n</ul>\r\n<strong>Lessons 4: Use Content Providers and Loaders to Persist and Recover Data (15-20 hrs)</strong>\r\n<p>Learn how the Android framework manages the activity lifecycle, and how it differs from what you might expect, and dive head-first into the world of persistent storage. Learn how to create databases, use Android\u2019s Content Providers to provide an abstraction layer between your data and your UI implementation, and use Loaders to efficiently load stored data.</p>\r\n<ul>\r\n<li>Activity lifecycle and background activity termination</li>\r\n<li>SQLite databases and JUnit tests</li>\r\n<li>Creating and using a Content Provider as an abstraction layer</li>\r\n<li>Using Loaders to asynchronously load data</li>\r\n<li>Creating Adapters to bind UI components to Content Providers</li>\r\n</ul>\r\n<strong>Lesson 5: Implement Rich and Responsive Layouts (8-12 hrs)</strong>\r\n<p>Create rich, responsive user interfaces that work across a variety of different hardware types and screen sizes. You\u2019ll learn more details on using the Android Layout managers, Fragments, UI widgets, and Android design principles to add visual polish to your user interfaces, and how to create your own controls from scratch.</p>\r\n<ul>\r\n<li>Fundamental Android design principles</li>\r\n<li>Supporting localization and variable screen sizes</li>\r\n<li>Optimizing tablet UIs using Fragments</li>\r\n<li>Accessibility Features</li>\r\n<li>Custom views</li>\r\n</ul>\r\n<strong>Lesson 6: Use Services and Notifications to Run in the Background (5-8 hrs)</strong>\r\n<p>Deliver a great user experience, even when your app isn\u2019t visible. Learn how the Android framework manages background apps; and discover how to use Services and Notifications to make your app to be active when it\u2019s not in the foreground. You\u2019ll learn techniques for efficient data transfers using SyncAdapters and Google Cloud Messaging, so your app can stay up-to-date without draining the battery.</p>\r\n<ul>\r\n<li>Background services and alarms to schedule background tasks</li>\r\n<li>Efficient background data transfers with SyncAdapters</li>\r\n<li>Rich notifications to interact with users</li>\r\n</ul>\r\n<strong>Final Project</strong>\r\n<p>Build your own Android app incorporating the skills you've learned in this course.</p>\r\n</div>"],
    "length": ["8 weeks long"],
    "effort": ["Assumes 6hrs/wk"]
    "prereqs": ["<p>You should have strong working knowledge of Java or another object-oriented programming language. Udacity's <a href="http://www.udacity.com/cs046" target="_blank">Intro to Java</a> is a helpful background if you're looking to refresh your Java skills.</p>

<p>You will be expected to download <a href="http://developer.android.com/sdk/installing/studio.html" target="_blank">Android Studio</a> in order to follow along with the instructors throughout the course. You also should be comfortable working with code on <a href="http://www.github.com" target="_blank">Github</a>. </p>

<p>Access to an Android device is helpful -- but not required -- to complete the final project.</p>

<p>Finally, while not a formal prerequisite, <a href="https://www.udacity.com/course/ud849" target="_blank">UX Design for Mobile</a> (also taught in collaboration with Google) is a good companion course to this one.</p>"],
    "video": ["http://www.youtube.com/channel/UC0VOktSaVdm_YIUa4X5mBTQ"],
    "instructor": ["Reto Meier, Alexander Lucas, Dan Galpin and Katherine Kuan"]
}]